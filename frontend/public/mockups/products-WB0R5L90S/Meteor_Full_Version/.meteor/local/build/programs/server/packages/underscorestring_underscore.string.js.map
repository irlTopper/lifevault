{"version":3,"sources":["underscorestring:underscore.string/dist/underscore.string.js"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,8tB;AACA,6B;AACA,sC;;AAEA,uD;AACA,8D;AACA,oC;AACA,K;;AAEA,8B;AACA,sB;AACA,U;AACA,e;AACA,G;AACA,E;;AAEA,wE;AACA,gD;;AAEA,2C;AACA,wB;AACA,oD;AACA,E;;AAEA,kE;AACA,gD;;AAEA,sC;AACA,mC;AACA,E;;AAEA,kE;AACA,2C;AACA,6B;AACA,oB;AACA,gB;AACA,4E;AACA,E;;AAEA,0C;AACA,yC;AACA,qC;AACA,gD;;AAEA,yC;AACA,wB;AACA,6E;AACA,E;;AAEA,kG;AACA,6B;;AAEA,sC;AACA,wC;AACA,E;;AAEA,qD;AACA,gD;;AAEA,wC;AACA,wB;AACA,8B;;AAEA,wD;;AAEA,gB;AACA,Y;AACA,2B;;AAEA,gB;AACA,mC;AACA,0B;AACA,Y;AACA,kB;AACA,G;;AAEA,e;AACA,E;;AAEA,kE;AACA,6B;;AAEA,0C;AACA,qF;AACA,E;;AAEA,qD;AACA,gD;;AAEA,6C;AACA,wB;AACA,oD;AACA,E;;AAEA,mE;AACA,gD;;AAEA,yB;AACA,yC;AACA,iC;AACA,E;AACA,4C;AACA,iD;AACA,G;;AAEA,gB;AACA,C;;AAEA,gD;AACA,wB;AACA,8B;AACA,U;;AAEA,+B;;AAEA,oC;AACA,0C;AACA,U;AACA,sD;AACA,G;;AAEA,8B;AACA,E;;AAEA,mE;AACA,gD;AACA,gD;;AAEA,yD;AACA,wB;AACA,mB;AACA,uC;AACA,wC;AACA,U;AACA,wE;AACA,G;AACA,mE;AACA,E;;AAEA,4F;AACA,gD;AACA,kD;AACA,6B;;AAEA,wE;AACA,iC;;AAEA,2C;AACA,0D;AACA,8C;AACA,K;AACA,E;;AAEA,6F;AACA,6B;AACA,kB;;AAEA,0B;AACA,kG;AACA,8B;AACA,G;;AAEA,gB;AACA,E;;AAEA,2C;AACA,qB;AACA,gE;AACA,iF;AACA,6D;AACA,iE;AACA,mB;;AAEA,a;;AAEA,mB;AACA,8B;AACA,gD;AACA,wB;AACA,C;;AAEA,oB;;AAEA,0C;AACA,4C;AACA,6C;AACA,+C;AACA,uC;AACA,uC;AACA,wC;AACA,wC;AACA,wC;AACA,2C;AACA,6C;AACA,+C;AACA,yC;AACA,yC;AACA,6C;AACA,0C;AACA,uC;AACA,wC;AACA,yC;AACA,0C;AACA,6C;AACA,2C;AACA,uC;AACA,uC;AACA,2C;AACA,2C;AACA,8C;AACA,4C;AACA,2C;AACA,2C;AACA,wC;AACA,wC;AACA,2C;AACA,wC;AACA,wC;AACA,sC;AACA,uC;AACA,uC;AACA,wC;AACA,0C;AACA,2C;AACA,2C;AACA,+C;AACA,2C;AACA,+C;AACA,0C;AACA,8C;AACA,6C;AACA,mD;AACA,0C;AACA,2C;AACA,wC;AACA,0C;AACA,yC;AACA,6C;AACA,8C;AACA,4C;AACA,0C;AACA,sD;;AAEA,U;AACA,qB;AACA,sB;AACA,sB;AACA,sB;AACA,qB;AACA,qB;AACA,wB;AACA,sB;AACA,0B;AACA,yB;;;AAGA,qB;AACA,e;AACA,2B;AACA,yB;AACA,G;AACA,E;;AAEA,6B;AACA,yC;AACA,mC;AACA,+E;AACA,qC;AACA,wE;AACA,wD;AACA,M;AACA,C;;AAEA,kD;AACA,0C;;AAEA,2C;AACA,oB;AACA,G;;AAEA,uC;AACA,2C;AACA,wD;AACA,6D;AACA,K;AACA,C;;AAEA,wB;AACA,gB;AACA,gB;AACA,U;AACA,Y;AACA,U;AACA,c;AACA,W;AACA,U;AACA,E;;AAEA,0E;;;AAGA,mB;;AAEA,67B;AACA,yC;;AAEA,oD;AACA,wB;AACA,yB;AACA,c;AACA,G;AACA,4F;AACA,E;;AAEA,4D;AACA,6C;;AAEA,2D;AACA,yB;AACA,iB;AACA,6B;AACA,6B;AACA,M;AACA,gD;AACA,E;;AAEA,8D;AACA,mB;AACA,U;AACA,U;AACA,Y;AACA,W;AACA,W;AACA,E;;AAEA,6B;;AAEA,2C;AACA,yC;;AAEA,6C;AACA,uE;AACA,E;;AAEA,4D;AACA,G;AACA,8C;AACA,I;AACA,8C;AACA,gC;AACA,qB;AACA,E;;AAEA,2C;AACA,8C;AACA,yB;AACA,kB;AACA,mB;AACA,+B;AACA,0B;AACA,G;AACA,gB;AACA,E;;AAEA,2C;AACA,8C;AACA,yC;AACA,E;;AAEA,2C;AACA,yC;AACA,2C;AACA,6B;;AAEA,yC;AACA,mF;AACA,E;;AAEA,0F;AACA,gD;;AAEA,gD;AACA,iC;AACA,gD;AACA,E;;AAEA,mE;AACA,iC;;AAEA,kD;AACA,mC;AACA,E;;AAEA,wD;AACA,gD;;AAEA,wC;AACA,yC;AACA,E;;AAEA,mE;AACA,gD;AACA,qB;;AAEA,kC;AACA,mC;AACA,6B;;AAEA,0C;AACA,E;;AAEA,mE;AACA,gD;;AAEA,mD;AACA,0B;AACA,0B;;AAEA,mB;AACA,gB;;AAEA,wC;AACA,4C;AACA,iB;AACA,sD;AACA,uB;AACA,Y;AACA,iE;AACA,Y;AACA,wB;;AAEA,wB;AACA,yB;AACA,K;;AAEA,uB;AACA,E;;AAEA,mE;AACA,sC;AACA,6B;AACA,oC;AACA,E;;AAEA,2C;AACA,2B;;AAEA,qD;AACA,kC;AACA,E;;AAEA,qD;AACA,2B;;AAEA,sD;AACA,0C;AACA,E;;AAEA,qD;AACA,gD;AACA,kE;AACA,+C;;AAEA,kD;AACA,wB;AACA,qE;AACA,+C;AACA,6D;AACA,E;;AAEA,qG;AACA,kD;AACA,6B;AACA,uB;AACA,sB;;AAEA,wC;AACA,2C;AACA,2C;AACA,qD;;AAEA,mC;AACA,uB;AACA,qB;;AAEA,kB;AACA,oB;AACA,oB;AACA,2C;AACA,oC;AACA,O;AACA,4B;AACA,K;AACA,G;;AAEA,uC;AACA,2C;;AAEA,8B;AACA,E;;AAEA,2C;AACA,iE;AACA,iD;;AAEA,iC;AACA,8C;;AAEA,gC;AACA,qB;AACA,wD;;AAEA,uE;AACA,E;;AAEA,2C;AACA,gD;AACA,8C;;AAEA,0D;AACA,wB;AACA,oB;;AAEA,iB;;AAEA,c;AACA,iB;AACA,6B;AACA,8B;;AAEA,iB;AACA,iB;AACA,mC;AACA,6C;AACA,gB;AACA,mC;AACA,wG;AACA,sB;AACA,mC;AACA,6C;AACA,G;AACA,E;;AAEA,2F;AACA,4C;;AAEA,qC;AACA,2B;AACA,E;;AAEA,iE;AACA,G;AACA,+C;AACA,wD;AACA,yB;AACA,G;AACA,gD;AACA,+B;;AAEA,wD;AACA,wB;AACA,oB;AACA,yD;;AAEA,uC;;AAEA,0B;AACA,2D;AACA,I;AACA,2G;;AAEA,wD;AACA,+C;AACA,M;AACA,6D;;AAEA,oG;AACA,E;;AAEA,gF;AACA,qC;;AAEA,iD;AACA,yC;AACA,E;;AAEA,0D;AACA,gD;AACA,8C;;AAEA,uD;AACA,wB;;AAEA,c;;AAEA,4D;AACA,oD;;AAEA,mD;AACA,wD;AACA,gC;AACA,E;;AAEA,2F;AACA,gD;;AAEA,sE;AACA,6C;AACA,oC;;AAEA,+C;AACA,E;;AAEA,mE;AACA,+B;;AAEA,wC;AACA,uC;AACA,E;;AAEA,sD;AACA,2B;;AAEA,qD;AACA,2C;AACA,E;;AAEA,qD;AACA,gD;AACA,kE;AACA,iD;;AAEA,kD;AACA,wB;AACA,uE;AACA,+C;AACA,wD;AACA,E;;AAEA,qG;AACA,gD;AACA,kE;AACA,6B;AACA,uC;;AAEA,wC;AACA,wE;AACA,wE;AACA,yD;;AAEA,iE;AACA,gC;AACA,mC;AACA,K;;AAEA,6D;AACA,E;;AAEA,iI;AACA,+B;;AAEA,2D;AACA,uB;AACA,qC;AACA,sB;AACA,E;;AAEA,sD;AACA,qC;AACA,gE;AACA,E;AACA,uE;AACA,uB;AACA,8C;AACA,yC;AACA,2B;AACA,+B;AACA,8D;AACA,G;;AAEA,6B;;AAEA,+B;AACA,yD;AACA,sE;AACA,K;AACA,mF;AACA,I;;AAEA,kD;AACA,mI;AACA,uC;AACA,0C;AACA,mC;AACA,mC;AACA,O;AACA,uC;AACA,2D;AACA,2C;AACA,6B;AACA,iD;AACA,mD;AACA,gG;AACA,a;AACA,mC;AACA,W;AACA,gE;AACA,+B;AACA,S;AACA,gD;AACA,+B;AACA,S;;AAEA,mE;AACA,+F;AACA,S;AACA,2B;AACA,iD;AACA,0D;AACA,mD;AACA,8F;AACA,gG;AACA,iD;AACA,sG;AACA,+C;AACA,kD;AACA,gE;AACA,S;AACA,gF;AACA,oF;AACA,mD;AACA,oE;AACA,sD;AACA,O;AACA,K;AACA,2B;AACA,I;;AAEA,wB;;AAEA,oC;AACA,+D;AACA,kB;AACA,sD;AACA,kC;AACA,O;AACA,0D;AACA,6B;AACA,O;AACA,sI;AACA,uB;AACA,yB;AACA,8E;AACA,uF;AACA,4C;AACA,qG;AACA,6F;AACA,gD;AACA,e;AACA,uF;AACA,gD;AACA,e;AACA,oB;AACA,oD;AACA,e;AACA,a;AACA,W;AACA,gB;AACA,gD;AACA,W;AACA,gC;AACA,S;AACA,c;AACA,yB;AACA,S;AACA,8B;AACA,yG;AACA,S;AACA,+B;AACA,O;AACA,Y;AACA,4C;AACA,O;AACA,6C;AACA,K;AACA,sB;AACA,I;;AAEA,oB;AACA,K;;AAEA,yB;;AAEA,kE;AACA,gD;AACA,gD;;AAEA,6D;AACA,wB;AACA,uB;AACA,+E;AACA,wD;AACA,E;;AAEA,4F;AACA,gD;;AAEA,6C;AACA,wB;AACA,wB;AACA,yC;AACA,wC;AACA,E;;AAEA,mE;AACA,gD;;AAEA,iD;AACA,wB;AACA,wB;AACA,iC;AACA,wC;AACA,E;;AAEA,mE;AACA,gD;;AAEA,8C;AACA,wB;AACA,wB;AACA,yC;AACA,8D;AACA,E;;AAEA,mE;AACA,gD;;AAEA,kD;AACA,wB;AACA,wB;AACA,6C;AACA,8D;AACA,E;;AAEA,mE;AACA,gD;;AAEA,0C;AACA,oD;AACA,E;;AAEA,mE;AACA,4C;;AAEA,qC;AACA,0B;AACA,E;;AAEA,iE;AACA,kD;AACA,0C;AACA,E;;AAEA,2C;AACA,gD;;AAEA,yC;AACA,qD;AACA,qE;AACA,K;AACA,E;;AAEA,mE;AACA,gD;;AAEA,yC;AACA,6E;AACA,2B;AACA,K;AACA,E;;AAEA,mE;AACA,6B;;AAEA,iC;AACA,yC;AACA,iC;AACA,4C;AACA,0B;AACA,2B;AACA,qD;AACA,oD;AACA,G;AACA,C;;AAEA,mE;AACA,8C;AACA,4C;AACA,kB;AACA,+D;AACA,kE;AACA,E;;AAEA,sD;AACA,6B;AACA,oC;AACA,yB;AACA,E;;AAEA,oD;AACA,4B;AACA,iE;AACA,2C;AACA,E;;AAEA,sD;AACA,+B;;AAEA,+E;AACA,gC;AACA,2C;AACA,wB;AACA,yB;;AAEA,mF;;AAEA,gF;AACA,E;;AAEA,uD;AACA,yC;;AAEA,iE;AACA,+C;AACA,E;;AAEA,4D;AACA,gD;AACA,kE;AACA,uC;;AAEA,iD;AACA,wB;AACA,6D;AACA,+C;AACA,uF;AACA,E;;AAEA,qG;AACA,gD;;AAEA,8D;AACA,wB;AACA,qC;AACA,oB;AACA,wE;AACA,E;;AAEA,mE;AACA,6B;;AAEA,4C;AACA,gG;AACA,E;;AAEA,sD;AACA,gD;AACA,kD;;AAEA,6C;AACA,8E;AACA,c;;AAEA,oC;AACA,qC;AACA,+D;AACA,yD;AACA,sD;AACA,6C;AACA,Y;AACA,oB;AACA,K;AACA,K;AACA,E;;AAEA,6F;AACA,mD;AACA,+B;AACA,gE;AACA,wC;AACA,kB;AACA,E;;AAEA,2C;AACA,mC;;AAEA,+C;AACA,oB;AACA,mC;AACA,E;;AAEA,yD;AACA,mC;AACA,6B;;AAEA,iD;AACA,8B;AACA,wD;AACA,E;;AAEA,yC;AACA,I;AACA,G","file":"/packages/underscorestring:underscore.string.js","sourcesContent":["!function(e){if(\"object\"==typeof exports)module.exports=e();else if(\"function\"==typeof define&&define.amd)define(e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.s=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\nvar trim = _dereq_('./trim');\nvar decap = _dereq_('./decapitalize');\n\nmodule.exports = function camelize(str, decapitalize) {\n  str = trim(str).replace(/[-_\\s]+(.)?/g, function(match, c) {\n    return c ? c.toUpperCase() : \"\";\n  });\n\n  if (decapitalize === true) {\n    return decap(str);\n  } else {\n    return str;\n  }\n};\n\n},{\"./decapitalize\":9,\"./trim\":60}],2:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\n\nmodule.exports = function capitalize(str) {\n  str = makeString(str);\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\n},{\"./helper/makeString\":19}],3:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\n\nmodule.exports = function chars(str) {\n  return makeString(str).split('');\n};\n\n},{\"./helper/makeString\":19}],4:[function(_dereq_,module,exports){\nmodule.exports = function chop(str, step) {\n  if (str == null) return [];\n  str = String(str);\n  step = ~~step;\n  return step > 0 ? str.match(new RegExp('.{1,' + step + '}', 'g')) : [str];\n};\n\n},{}],5:[function(_dereq_,module,exports){\nvar capitalize = _dereq_('./capitalize');\nvar camelize = _dereq_('./camelize');\nvar makeString = _dereq_('./helper/makeString');\n\nmodule.exports = function classify(str) {\n  str = makeString(str);\n  return capitalize(camelize(str.replace(/[\\W_]/g, ' ')).replace(/\\s/g, ''));\n};\n\n},{\"./camelize\":1,\"./capitalize\":2,\"./helper/makeString\":19}],6:[function(_dereq_,module,exports){\nvar trim = _dereq_('./trim');\n\nmodule.exports = function clean(str) {\n  return trim(str).replace(/\\s+/g, ' ');\n};\n\n},{\"./trim\":60}],7:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\n\nmodule.exports = function(str, substr) {\n  str = makeString(str);\n  substr = makeString(substr);\n\n  if (str.length === 0 || substr.length === 0) return 0;\n\n  var count = 0,\n    pos = 0,\n    length = substr.length;\n\n  while (true) {\n    pos = str.indexOf(substr, pos);\n    if (pos === -1) break;\n    count++;\n    pos += length;\n  }\n\n  return count;\n};\n\n},{\"./helper/makeString\":19}],8:[function(_dereq_,module,exports){\nvar trim = _dereq_('./trim');\n\nmodule.exports = function dasherize(str) {\n  return trim(str).replace(/([A-Z])/g, '-$1').replace(/[-_\\s]+/g, '-').toLowerCase();\n};\n\n},{\"./trim\":60}],9:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\n\nmodule.exports = function decapitalize(str) {\n  str = makeString(str);\n  return str.charAt(0).toLowerCase() + str.slice(1);\n};\n\n},{\"./helper/makeString\":19}],10:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\n\nfunction getIndent(str) {\n  var matches = str.match(/^[\\s\\\\t]*/gm);\n  var indent = matches[0].length;\n  \n  for (var i = 1; i < matches.length; i++) {\n    indent = Math.min(matches[i].length, indent);\n  }\n\n  return indent;\n}\n\nmodule.exports = function dedent(str, pattern) {\n  str = makeString(str);\n  var indent = getIndent(str);\n  var reg;\n\n  if (indent === 0) return str;\n\n  if (typeof pattern === 'string') {\n    reg = new RegExp('^' + pattern, 'gm');\n  } else {\n    reg = new RegExp('^[ \\\\t]{' + indent + '}', 'gm');\n  }\n\n  return str.replace(reg, '');\n};\n\n},{\"./helper/makeString\":19}],11:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\nvar toPositive = _dereq_('./helper/toPositive');\n\nmodule.exports = function endsWith(str, ends, position) {\n  str = makeString(str);\n  ends = '' + ends;\n  if (typeof position == 'undefined') {\n    position = str.length - ends.length;\n  } else {\n    position = Math.min(toPositive(position), str.length) - ends.length;\n  }\n  return position >= 0 && str.indexOf(ends, position) === position;\n};\n\n},{\"./helper/makeString\":19,\"./helper/toPositive\":21}],12:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\nvar escapeChars = _dereq_('./helper/escapeChars');\nvar reversedEscapeChars = {};\n\nfor(var key in escapeChars) reversedEscapeChars[escapeChars[key]] = key;\nreversedEscapeChars[\"'\"] = '#39';\n\nmodule.exports = function escapeHTML(str) {\n  return makeString(str).replace(/[&<>\"']/g, function(m) {\n    return '&' + reversedEscapeChars[m] + ';';\n  });\n};\n\n},{\"./helper/escapeChars\":17,\"./helper/makeString\":19}],13:[function(_dereq_,module,exports){\nmodule.exports = function() {\n  var result = {};\n\n  for (var prop in this) {\n    if (!this.hasOwnProperty(prop) || prop.match(/^(?:include|contains|reverse|join)$/)) continue;\n    result[prop] = this[prop];\n  }\n\n  return result;\n};\n\n},{}],14:[function(_dereq_,module,exports){\n//  Underscore.string\n//  (c) 2010 Esa-Matti Suuronen <esa-matti aet suuronen dot org>\n//  Underscore.string is freely distributable under the terms of the MIT license.\n//  Documentation: https://github.com/epeli/underscore.string\n//  Some code is borrowed from MooTools and Alexandru Marasteanu.\n//  Version '3.0.3'\n\n'use strict';\n\nfunction s(value) {\n  /* jshint validthis: true */\n  if (!(this instanceof s)) return new s(value);\n  this._wrapped = value;\n}\n\ns.VERSION = '3.0.3';\n\ns.isBlank          = _dereq_('./isBlank');\ns.stripTags        = _dereq_('./stripTags');\ns.capitalize       = _dereq_('./capitalize');\ns.decapitalize     = _dereq_('./decapitalize');\ns.chop             = _dereq_('./chop');\ns.trim             = _dereq_('./trim');\ns.clean            = _dereq_('./clean');\ns.count            = _dereq_('./count');\ns.chars            = _dereq_('./chars');\ns.swapCase         = _dereq_('./swapCase');\ns.escapeHTML       = _dereq_('./escapeHTML');\ns.unescapeHTML     = _dereq_('./unescapeHTML');\ns.splice           = _dereq_('./splice');\ns.insert           = _dereq_('./insert');\ns.replaceAll       = _dereq_('./replaceAll');\ns.include          = _dereq_('./include');\ns.join             = _dereq_('./join');\ns.lines            = _dereq_('./lines');\ns.dedent           = _dereq_('./dedent');\ns.reverse          = _dereq_('./reverse');\ns.startsWith       = _dereq_('./startsWith');\ns.endsWith         = _dereq_('./endsWith');\ns.pred             = _dereq_('./pred');\ns.succ             = _dereq_('./succ');\ns.titleize         = _dereq_('./titleize');\ns.camelize         = _dereq_('./camelize');\ns.underscored      = _dereq_('./underscored');\ns.dasherize        = _dereq_('./dasherize');\ns.classify         = _dereq_('./classify');\ns.humanize         = _dereq_('./humanize');\ns.ltrim            = _dereq_('./ltrim');\ns.rtrim            = _dereq_('./rtrim');\ns.truncate         = _dereq_('./truncate');\ns.prune            = _dereq_('./prune');\ns.words            = _dereq_('./words');\ns.pad              = _dereq_('./pad');\ns.lpad             = _dereq_('./lpad');\ns.rpad             = _dereq_('./rpad');\ns.lrpad            = _dereq_('./lrpad');\ns.sprintf          = _dereq_('./sprintf');\ns.vsprintf         = _dereq_('./vsprintf');\ns.toNumber         = _dereq_('./toNumber');\ns.numberFormat     = _dereq_('./numberFormat');\ns.strRight         = _dereq_('./strRight');\ns.strRightBack     = _dereq_('./strRightBack');\ns.strLeft          = _dereq_('./strLeft');\ns.strLeftBack      = _dereq_('./strLeftBack');\ns.toSentence       = _dereq_('./toSentence');\ns.toSentenceSerial = _dereq_('./toSentenceSerial');\ns.slugify          = _dereq_('./slugify');\ns.surround         = _dereq_('./surround');\ns.quote            = _dereq_('./quote');\ns.unquote          = _dereq_('./unquote');\ns.repeat           = _dereq_('./repeat');\ns.naturalCmp       = _dereq_('./naturalCmp');\ns.levenshtein      = _dereq_('./levenshtein');\ns.toBoolean        = _dereq_('./toBoolean');\ns.exports          = _dereq_('./exports');\ns.escapeRegExp     = _dereq_('./helper/escapeRegExp');\n\n// Aliases\ns.strip     = s.trim;\ns.lstrip    = s.ltrim;\ns.rstrip    = s.rtrim;\ns.center    = s.lrpad;\ns.rjust     = s.lpad;\ns.ljust     = s.rpad;\ns.contains  = s.include;\ns.q         = s.quote;\ns.toBool    = s.toBoolean;\ns.camelcase = s.camelize;\n\n\n// Implement chaining\ns.prototype = {\n  value: function value() {\n    return this._wrapped;\n  }\n};\n\nfunction fn2method(key, fn) {\n    if (typeof fn !== \"function\") return;\n    s.prototype[key] = function() {\n      var args = [this._wrapped].concat(Array.prototype.slice.call(arguments));\n      var res = fn.apply(null, args);\n      // if the result is non-string stop the chain and return the value\n      return typeof res === 'string' ? new s(res) : res;\n    };\n}\n\n// Copy functions to instance methods for chaining\nfor (var key in s) fn2method(key, s[key]);\n\nfn2method(\"tap\", function tap(string, fn) {\n  return fn(string);\n});\n\nfunction prototype2method(methodName) {\n  fn2method(methodName, function(context) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return String.prototype[methodName].apply(context, args);\n  });\n}\n\nvar prototypeMethods = [\n  \"toUpperCase\",\n  \"toLowerCase\",\n  \"split\",\n  \"replace\",\n  \"slice\",\n  \"substring\",\n  \"substr\",\n  \"concat\"\n];\n\nfor (var key in prototypeMethods) prototype2method(prototypeMethods[key]);\n\n\nmodule.exports = s;\n\n},{\"./camelize\":1,\"./capitalize\":2,\"./chars\":3,\"./chop\":4,\"./classify\":5,\"./clean\":6,\"./count\":7,\"./dasherize\":8,\"./decapitalize\":9,\"./dedent\":10,\"./endsWith\":11,\"./escapeHTML\":12,\"./exports\":13,\"./helper/escapeRegExp\":18,\"./humanize\":22,\"./include\":23,\"./insert\":24,\"./isBlank\":25,\"./join\":26,\"./levenshtein\":27,\"./lines\":28,\"./lpad\":29,\"./lrpad\":30,\"./ltrim\":31,\"./naturalCmp\":32,\"./numberFormat\":33,\"./pad\":34,\"./pred\":35,\"./prune\":36,\"./quote\":37,\"./repeat\":38,\"./replaceAll\":39,\"./reverse\":40,\"./rpad\":41,\"./rtrim\":42,\"./slugify\":43,\"./splice\":44,\"./sprintf\":45,\"./startsWith\":46,\"./strLeft\":47,\"./strLeftBack\":48,\"./strRight\":49,\"./strRightBack\":50,\"./stripTags\":51,\"./succ\":52,\"./surround\":53,\"./swapCase\":54,\"./titleize\":55,\"./toBoolean\":56,\"./toNumber\":57,\"./toSentence\":58,\"./toSentenceSerial\":59,\"./trim\":60,\"./truncate\":61,\"./underscored\":62,\"./unescapeHTML\":63,\"./unquote\":64,\"./vsprintf\":65,\"./words\":66}],15:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./makeString');\n\nmodule.exports = function adjacent(str, direction) {\n  str = makeString(str);\n  if (str.length === 0) {\n    return '';\n  }\n  return str.slice(0, -1) + String.fromCharCode(str.charCodeAt(str.length - 1) + direction);\n};\n\n},{\"./makeString\":19}],16:[function(_dereq_,module,exports){\nvar escapeRegExp = _dereq_('./escapeRegExp');\n\nmodule.exports = function defaultToWhiteSpace(characters) {\n  if (characters == null)\n    return '\\\\s';\n  else if (characters.source)\n    return characters.source;\n  else\n    return '[' + escapeRegExp(characters) + ']';\n};\n\n},{\"./escapeRegExp\":18}],17:[function(_dereq_,module,exports){\nvar escapeChars = {\n  lt: '<',\n  gt: '>',\n  quot: '\"',\n  amp: '&',\n  apos: \"'\"\n};\n\nmodule.exports = escapeChars;\n\n},{}],18:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./makeString');\n\nmodule.exports = function escapeRegExp(str) {\n  return makeString(str).replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n};\n\n},{\"./makeString\":19}],19:[function(_dereq_,module,exports){\n/**\n * Ensure some object is a coerced to a string\n **/\nmodule.exports = function makeString(object) {\n  if (object == null) return '';\n  return '' + object;\n};\n\n},{}],20:[function(_dereq_,module,exports){\nmodule.exports = function strRepeat(str, qty){\n  if (qty < 1) return '';\n  var result = '';\n  while (qty > 0) {\n    if (qty & 1) result += str;\n    qty >>= 1, str += str;\n  }\n  return result;\n};\n\n},{}],21:[function(_dereq_,module,exports){\nmodule.exports = function toPositive(number) {\n  return number < 0 ? 0 : (+number || 0);\n};\n\n},{}],22:[function(_dereq_,module,exports){\nvar capitalize = _dereq_('./capitalize');\nvar underscored = _dereq_('./underscored');\nvar trim = _dereq_('./trim');\n\nmodule.exports = function humanize(str) {\n  return capitalize(trim(underscored(str).replace(/_id$/, '').replace(/_/g, ' ')));\n};\n\n},{\"./capitalize\":2,\"./trim\":60,\"./underscored\":62}],23:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\n\nmodule.exports = function include(str, needle) {\n  if (needle === '') return true;\n  return makeString(str).indexOf(needle) !== -1;\n};\n\n},{\"./helper/makeString\":19}],24:[function(_dereq_,module,exports){\nvar splice = _dereq_('./splice');\n\nmodule.exports = function insert(str, i, substr) {\n  return splice(str, i, 0, substr);\n};\n\n},{\"./splice\":44}],25:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\n\nmodule.exports = function isBlank(str) {\n  return (/^\\s*$/).test(makeString(str));\n};\n\n},{\"./helper/makeString\":19}],26:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\nvar slice = [].slice;\n\nmodule.exports = function join() {\n  var args = slice.call(arguments),\n    separator = args.shift();\n\n  return args.join(makeString(separator));\n};\n\n},{\"./helper/makeString\":19}],27:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\n\nmodule.exports = function levenshtein(str1, str2) {\n  str1 = makeString(str1);\n  str2 = makeString(str2);\n\n  var current = [],\n    prev, value;\n\n  for (var i = 0; i <= str2.length; i++)\n    for (var j = 0; j <= str1.length; j++) {\n      if (i && j)\n        if (str1.charAt(j - 1) === str2.charAt(i - 1))\n          value = prev;\n        else\n          value = Math.min(current[j], current[j - 1], prev) + 1;\n        else\n          value = i + j;\n\n      prev = current[j];\n      current[j] = value;\n    }\n\n  return current.pop();\n};\n\n},{\"./helper/makeString\":19}],28:[function(_dereq_,module,exports){\nmodule.exports = function lines(str) {\n  if (str == null) return [];\n  return String(str).split(/\\r?\\n/);\n};\n\n},{}],29:[function(_dereq_,module,exports){\nvar pad = _dereq_('./pad');\n\nmodule.exports = function lpad(str, length, padStr) {\n  return pad(str, length, padStr);\n};\n\n},{\"./pad\":34}],30:[function(_dereq_,module,exports){\nvar pad = _dereq_('./pad');\n\nmodule.exports = function lrpad(str, length, padStr) {\n  return pad(str, length, padStr, 'both');\n};\n\n},{\"./pad\":34}],31:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\nvar defaultToWhiteSpace = _dereq_('./helper/defaultToWhiteSpace');\nvar nativeTrimLeft = String.prototype.trimLeft;\n\nmodule.exports = function ltrim(str, characters) {\n  str = makeString(str);\n  if (!characters && nativeTrimLeft) return nativeTrimLeft.call(str);\n  characters = defaultToWhiteSpace(characters);\n  return str.replace(new RegExp('^' + characters + '+'), '');\n};\n\n},{\"./helper/defaultToWhiteSpace\":16,\"./helper/makeString\":19}],32:[function(_dereq_,module,exports){\nmodule.exports = function naturalCmp(str1, str2) {\n  if (str1 == str2) return 0;\n  if (!str1) return -1;\n  if (!str2) return 1;\n\n  var cmpRegex = /(\\.\\d+)|(\\d+)|(\\D+)/g,\n    tokens1 = String(str1).match(cmpRegex),\n    tokens2 = String(str2).match(cmpRegex),\n    count = Math.min(tokens1.length, tokens2.length);\n\n  for (var i = 0; i < count; i++) {\n    var a = tokens1[i],\n      b = tokens2[i];\n\n    if (a !== b) {\n      var num1 = +a;\n      var num2 = +b;\n      if (num1 === num1 && num2 === num2) {\n        return num1 > num2 ? 1 : -1;\n      }\n      return a < b ? -1 : 1;\n    }\n  }\n\n  if (tokens1.length != tokens2.length)\n    return tokens1.length - tokens2.length;\n\n  return str1 < str2 ? -1 : 1;\n};\n\n},{}],33:[function(_dereq_,module,exports){\nmodule.exports = function numberFormat(number, dec, dsep, tsep) {\n  if (isNaN(number) || number == null) return '';\n\n  number = number.toFixed(~~dec);\n  tsep = typeof tsep == 'string' ? tsep : ',';\n\n  var parts = number.split('.'),\n    fnums = parts[0],\n    decimals = parts[1] ? (dsep || '.') + parts[1] : '';\n\n  return fnums.replace(/(\\d)(?=(?:\\d{3})+$)/g, '$1' + tsep) + decimals;\n};\n\n},{}],34:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\nvar strRepeat = _dereq_('./helper/strRepeat');\n\nmodule.exports = function pad(str, length, padStr, type) {\n  str = makeString(str);\n  length = ~~length;\n\n  var padlen = 0;\n\n  if (!padStr)\n    padStr = ' ';\n  else if (padStr.length > 1)\n    padStr = padStr.charAt(0);\n\n  switch (type) {\n    case 'right':\n      padlen = length - str.length;\n      return str + strRepeat(padStr, padlen);\n    case 'both':\n      padlen = length - str.length;\n      return strRepeat(padStr, Math.ceil(padlen / 2)) + str + strRepeat(padStr, Math.floor(padlen / 2));\n    default: // 'left'\n      padlen = length - str.length;\n      return strRepeat(padStr, padlen) + str;\n  }\n};\n\n},{\"./helper/makeString\":19,\"./helper/strRepeat\":20}],35:[function(_dereq_,module,exports){\nvar adjacent = _dereq_('./helper/adjacent');\n\nmodule.exports = function succ(str) {\n  return adjacent(str, -1);\n};\n\n},{\"./helper/adjacent\":15}],36:[function(_dereq_,module,exports){\n/**\n * _s.prune: a more elegant version of truncate\n * prune extra chars, never leaving a half-chopped word.\n * @author github.com/rwz\n */\nvar makeString = _dereq_('./helper/makeString');\nvar rtrim = _dereq_('./rtrim');\n\nmodule.exports = function prune(str, length, pruneStr) {\n  str = makeString(str);\n  length = ~~length;\n  pruneStr = pruneStr != null ? String(pruneStr) : '...';\n\n  if (str.length <= length) return str;\n\n  var tmpl = function(c) {\n    return c.toUpperCase() !== c.toLowerCase() ? 'A' : ' ';\n  },\n    template = str.slice(0, length + 1).replace(/.(?=\\W*\\w*$)/g, tmpl); // 'Hello, world' -> 'HellAA AAAAA'\n\n  if (template.slice(template.length - 2).match(/\\w\\w/))\n    template = template.replace(/\\s*\\S+$/, '');\n  else\n    template = rtrim(template.slice(0, template.length - 1));\n\n  return (template + pruneStr).length > str.length ? str : str.slice(0, template.length) + pruneStr;\n};\n\n},{\"./helper/makeString\":19,\"./rtrim\":42}],37:[function(_dereq_,module,exports){\nvar surround = _dereq_('./surround');\n\nmodule.exports = function quote(str, quoteChar) {\n  return surround(str, quoteChar || '\"');\n};\n\n},{\"./surround\":53}],38:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\nvar strRepeat = _dereq_('./helper/strRepeat');\n\nmodule.exports = function repeat(str, qty, separator) {\n  str = makeString(str);\n\n  qty = ~~qty;\n\n  // using faster implementation if separator is not needed;\n  if (separator == null) return strRepeat(str, qty);\n\n  // this one is about 300x slower in Google Chrome\n  for (var repeat = []; qty > 0; repeat[--qty] = str) {}\n  return repeat.join(separator);\n};\n\n},{\"./helper/makeString\":19,\"./helper/strRepeat\":20}],39:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\n\nmodule.exports = function replaceAll(str, find, replace, ignorecase) {\n  var flags = (ignorecase === true)?'gi':'g';\n  var reg = new RegExp(find, flags);\n\n  return makeString(str).replace(reg, replace);\n};\n\n},{\"./helper/makeString\":19}],40:[function(_dereq_,module,exports){\nvar chars = _dereq_('./chars');\n\nmodule.exports = function reverse(str) {\n  return chars(str).reverse().join('');\n};\n\n},{\"./chars\":3}],41:[function(_dereq_,module,exports){\nvar pad = _dereq_('./pad');\n\nmodule.exports = function rpad(str, length, padStr) {\n  return pad(str, length, padStr, 'right');\n};\n\n},{\"./pad\":34}],42:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\nvar defaultToWhiteSpace = _dereq_('./helper/defaultToWhiteSpace');\nvar nativeTrimRight = String.prototype.trimRight;\n\nmodule.exports = function rtrim(str, characters) {\n  str = makeString(str);\n  if (!characters && nativeTrimRight) return nativeTrimRight.call(str);\n  characters = defaultToWhiteSpace(characters);\n  return str.replace(new RegExp(characters + '+$'), '');\n};\n\n},{\"./helper/defaultToWhiteSpace\":16,\"./helper/makeString\":19}],43:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\nvar defaultToWhiteSpace = _dereq_('./helper/defaultToWhiteSpace');\nvar trim = _dereq_('./trim');\nvar dasherize = _dereq_('./dasherize');\n\nmodule.exports = function slugify(str) {\n  var from  = \"ąàáäâãåæăćčĉęèéëêĝĥìíïîĵłľńňòóöőôõðøśșšŝťțŭùúüűûñÿýçżźž\",\n      to    = \"aaaaaaaaaccceeeeeghiiiijllnnoooooooossssttuuuuuunyyczzz\",\n      regex = new RegExp(defaultToWhiteSpace(from), 'g');\n\n  str = makeString(str).toLowerCase().replace(regex, function(c){\n    var index = from.indexOf(c);\n    return to.charAt(index) || '-';\n  });\n\n  return trim(dasherize(str.replace(/[^\\w\\s-]/g, '-')), '-');\n};\n\n},{\"./dasherize\":8,\"./helper/defaultToWhiteSpace\":16,\"./helper/makeString\":19,\"./trim\":60}],44:[function(_dereq_,module,exports){\nvar chars = _dereq_('./chars');\n\nmodule.exports = function splice(str, i, howmany, substr) {\n  var arr = chars(str);\n  arr.splice(~~i, ~~howmany, substr);\n  return arr.join('');\n};\n\n},{\"./chars\":3}],45:[function(_dereq_,module,exports){\n// sprintf() for JavaScript 0.7-beta1\n// http://www.diveintojavascript.com/projects/javascript-sprintf\n//\n// Copyright (c) Alexandru Marasteanu <alexaholic [at) gmail (dot] com>\n// All rights reserved.\nvar strRepeat = _dereq_('./helper/strRepeat');\nvar toString = Object.prototype.toString;\nvar sprintf = (function() {\n  function get_type(variable) {\n    return toString.call(variable).slice(8, -1).toLowerCase();\n  }\n\n  var str_repeat = strRepeat;\n\n  var str_format = function() {\n    if (!str_format.cache.hasOwnProperty(arguments[0])) {\n      str_format.cache[arguments[0]] = str_format.parse(arguments[0]);\n    }\n    return str_format.format.call(null, str_format.cache[arguments[0]], arguments);\n  };\n\n  str_format.format = function(parse_tree, argv) {\n    var cursor = 1, tree_length = parse_tree.length, node_type = '', arg, output = [], i, k, match, pad, pad_character, pad_length;\n    for (i = 0; i < tree_length; i++) {\n      node_type = get_type(parse_tree[i]);\n      if (node_type === 'string') {\n        output.push(parse_tree[i]);\n      }\n      else if (node_type === 'array') {\n        match = parse_tree[i]; // convenience purposes only\n        if (match[2]) { // keyword argument\n          arg = argv[cursor];\n          for (k = 0; k < match[2].length; k++) {\n            if (!arg.hasOwnProperty(match[2][k])) {\n              throw new Error(sprintf('[_.sprintf] property \"%s\" does not exist', match[2][k]));\n            }\n            arg = arg[match[2][k]];\n          }\n        } else if (match[1]) { // positional argument (explicit)\n          arg = argv[match[1]];\n        }\n        else { // positional argument (implicit)\n          arg = argv[cursor++];\n        }\n\n        if (/[^s]/.test(match[8]) && (get_type(arg) != 'number')) {\n          throw new Error(sprintf('[_.sprintf] expecting number but found %s', get_type(arg)));\n        }\n        switch (match[8]) {\n          case 'b': arg = arg.toString(2); break;\n          case 'c': arg = String.fromCharCode(arg); break;\n          case 'd': arg = parseInt(arg, 10); break;\n          case 'e': arg = match[7] ? arg.toExponential(match[7]) : arg.toExponential(); break;\n          case 'f': arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg); break;\n          case 'o': arg = arg.toString(8); break;\n          case 's': arg = ((arg = String(arg)) && match[7] ? arg.substring(0, match[7]) : arg); break;\n          case 'u': arg = Math.abs(arg); break;\n          case 'x': arg = arg.toString(16); break;\n          case 'X': arg = arg.toString(16).toUpperCase(); break;\n        }\n        arg = (/[def]/.test(match[8]) && match[3] && arg >= 0 ? '+'+ arg : arg);\n        pad_character = match[4] ? match[4] == '0' ? '0' : match[4].charAt(1) : ' ';\n        pad_length = match[6] - String(arg).length;\n        pad = match[6] ? str_repeat(pad_character, pad_length) : '';\n        output.push(match[5] ? arg + pad : pad + arg);\n      }\n    }\n    return output.join('');\n  };\n\n  str_format.cache = {};\n\n  str_format.parse = function(fmt) {\n    var _fmt = fmt, match = [], parse_tree = [], arg_names = 0;\n    while (_fmt) {\n      if ((match = /^[^\\x25]+/.exec(_fmt)) !== null) {\n        parse_tree.push(match[0]);\n      }\n      else if ((match = /^\\x25{2}/.exec(_fmt)) !== null) {\n        parse_tree.push('%');\n      }\n      else if ((match = /^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-fosuxX])/.exec(_fmt)) !== null) {\n        if (match[2]) {\n          arg_names |= 1;\n          var field_list = [], replacement_field = match[2], field_match = [];\n          if ((field_match = /^([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n            field_list.push(field_match[1]);\n            while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n              if ((field_match = /^\\.([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n                field_list.push(field_match[1]);\n              }\n              else if ((field_match = /^\\[(\\d+)\\]/.exec(replacement_field)) !== null) {\n                field_list.push(field_match[1]);\n              }\n              else {\n                throw new Error('[_.sprintf] huh?');\n              }\n            }\n          }\n          else {\n            throw new Error('[_.sprintf] huh?');\n          }\n          match[2] = field_list;\n        }\n        else {\n          arg_names |= 2;\n        }\n        if (arg_names === 3) {\n          throw new Error('[_.sprintf] mixing positional and named placeholders is not (yet) supported');\n        }\n        parse_tree.push(match);\n      }\n      else {\n        throw new Error('[_.sprintf] huh?');\n      }\n      _fmt = _fmt.substring(match[0].length);\n    }\n    return parse_tree;\n  };\n\n  return str_format;\n})();\n\nmodule.exports = sprintf;\n\n},{\"./helper/strRepeat\":20}],46:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\nvar toPositive = _dereq_('./helper/toPositive');\n\nmodule.exports = function startsWith(str, starts, position) {\n  str = makeString(str);\n  starts = '' + starts;\n  position = position == null ? 0 : Math.min(toPositive(position), str.length);\n  return str.lastIndexOf(starts, position) === position;\n};\n\n},{\"./helper/makeString\":19,\"./helper/toPositive\":21}],47:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\n\nmodule.exports = function strLeft(str, sep) {\n  str = makeString(str);\n  sep = makeString(sep);\n  var pos = !sep ? -1 : str.indexOf(sep);\n  return~ pos ? str.slice(0, pos) : str;\n};\n\n},{\"./helper/makeString\":19}],48:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\n\nmodule.exports = function strLeftBack(str, sep) {\n  str = makeString(str);\n  sep = makeString(sep);\n  var pos = str.lastIndexOf(sep);\n  return~ pos ? str.slice(0, pos) : str;\n};\n\n},{\"./helper/makeString\":19}],49:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\n\nmodule.exports = function strRight(str, sep) {\n  str = makeString(str);\n  sep = makeString(sep);\n  var pos = !sep ? -1 : str.indexOf(sep);\n  return~ pos ? str.slice(pos + sep.length, str.length) : str;\n};\n\n},{\"./helper/makeString\":19}],50:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\n\nmodule.exports = function strRightBack(str, sep) {\n  str = makeString(str);\n  sep = makeString(sep);\n  var pos = !sep ? -1 : str.lastIndexOf(sep);\n  return~ pos ? str.slice(pos + sep.length, str.length) : str;\n};\n\n},{\"./helper/makeString\":19}],51:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\n\nmodule.exports = function stripTags(str) {\n  return makeString(str).replace(/<\\/?[^>]+>/g, '');\n};\n\n},{\"./helper/makeString\":19}],52:[function(_dereq_,module,exports){\nvar adjacent = _dereq_('./helper/adjacent');\n\nmodule.exports = function succ(str) {\n  return adjacent(str, 1);\n};\n\n},{\"./helper/adjacent\":15}],53:[function(_dereq_,module,exports){\nmodule.exports = function surround(str, wrapper) {\n  return [wrapper, str, wrapper].join('');\n};\n\n},{}],54:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\n\nmodule.exports = function swapCase(str) {\n  return makeString(str).replace(/\\S/g, function(c) {\n    return c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase();\n  });\n};\n\n},{\"./helper/makeString\":19}],55:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\n\nmodule.exports = function titleize(str) {\n  return makeString(str).toLowerCase().replace(/(?:^|\\s|-)\\S/g, function(c) {\n    return c.toUpperCase();\n  });\n};\n\n},{\"./helper/makeString\":19}],56:[function(_dereq_,module,exports){\nvar trim = _dereq_('./trim');\n\nfunction boolMatch(s, matchers) {\n  var i, matcher, down = s.toLowerCase();\n  matchers = [].concat(matchers);\n  for (i = 0; i < matchers.length; i += 1) {\n    matcher = matchers[i];\n    if (!matcher) continue;\n    if (matcher.test && matcher.test(s)) return true;\n    if (matcher.toLowerCase() === down) return true;\n  }\n}\n\nmodule.exports = function toBoolean(str, trueValues, falseValues) {\n  if (typeof str === \"number\") str = \"\" + str;\n  if (typeof str !== \"string\") return !!str;\n  str = trim(str);\n  if (boolMatch(str, trueValues || [\"true\", \"1\"])) return true;\n  if (boolMatch(str, falseValues || [\"false\", \"0\"])) return false;\n};\n\n},{\"./trim\":60}],57:[function(_dereq_,module,exports){\nvar trim = _dereq_('./trim');\nvar parseNumber = function(source) {\n  return source * 1 || 0;\n};\n\nmodule.exports = function toNumber(num, precision) {\n  if (num == null) return 0;\n  var factor = Math.pow(10, isFinite(precision) ? precision : 0);\n  return Math.round(num * factor) / factor;\n};\n\n},{\"./trim\":60}],58:[function(_dereq_,module,exports){\nvar rtrim = _dereq_('./rtrim');\n\nmodule.exports = function toSentence(array, separator, lastSeparator, serial) {\n  separator = separator || ', ';\n  lastSeparator = lastSeparator || ' and ';\n  var a = array.slice(),\n    lastMember = a.pop();\n\n  if (array.length > 2 && serial) lastSeparator = rtrim(separator) + lastSeparator;\n\n  return a.length ? a.join(separator) + lastSeparator + lastMember : lastMember;\n};\n\n},{\"./rtrim\":42}],59:[function(_dereq_,module,exports){\nvar toSentence = _dereq_('./toSentence');\n\nmodule.exports = function toSentenceSerial(array, sep, lastSep) {\n  return toSentence(array, sep, lastSep, true);\n};\n\n},{\"./toSentence\":58}],60:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\nvar defaultToWhiteSpace = _dereq_('./helper/defaultToWhiteSpace');\nvar nativeTrim = String.prototype.trim;\n\nmodule.exports = function trim(str, characters) {\n  str = makeString(str);\n  if (!characters && nativeTrim) return nativeTrim.call(str);\n  characters = defaultToWhiteSpace(characters);\n  return str.replace(new RegExp('^' + characters + '+|' + characters + '+$', 'g'), '');\n};\n\n},{\"./helper/defaultToWhiteSpace\":16,\"./helper/makeString\":19}],61:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\n\nmodule.exports = function truncate(str, length, truncateStr) {\n  str = makeString(str);\n  truncateStr = truncateStr || '...';\n  length = ~~length;\n  return str.length > length ? str.slice(0, length) + truncateStr : str;\n};\n\n},{\"./helper/makeString\":19}],62:[function(_dereq_,module,exports){\nvar trim = _dereq_('./trim');\n\nmodule.exports = function underscored(str) {\n  return trim(str).replace(/([a-z\\d])([A-Z]+)/g, '$1_$2').replace(/[-\\s]+/g, '_').toLowerCase();\n};\n\n},{\"./trim\":60}],63:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./helper/makeString');\nvar escapeChars = _dereq_('./helper/escapeChars');\n\nmodule.exports = function unescapeHTML(str) {\n  return makeString(str).replace(/\\&([^;]+);/g, function(entity, entityCode) {\n    var match;\n\n    if (entityCode in escapeChars) {\n      return escapeChars[entityCode];\n    } else if (match = entityCode.match(/^#x([\\da-fA-F]+)$/)) {\n      return String.fromCharCode(parseInt(match[1], 16));\n    } else if (match = entityCode.match(/^#(\\d+)$/)) {\n      return String.fromCharCode(~~match[1]);\n    } else {\n      return entity;\n    }\n  });\n};\n\n},{\"./helper/escapeChars\":17,\"./helper/makeString\":19}],64:[function(_dereq_,module,exports){\nmodule.exports = function unquote(str, quoteChar) {\n  quoteChar = quoteChar || '\"';\n  if (str[0] === quoteChar && str[str.length - 1] === quoteChar)\n    return str.slice(1, str.length - 1);\n  else return str;\n};\n\n},{}],65:[function(_dereq_,module,exports){\nvar sprintf = _dereq_('./sprintf');\n\nmodule.exports = function vsprintf(fmt, argv) {\n  argv.unshift(fmt);\n  return sprintf.apply(null, argv);\n};\n\n},{\"./sprintf\":45}],66:[function(_dereq_,module,exports){\nvar isBlank = _dereq_('./isBlank');\nvar trim = _dereq_('./trim');\n\nmodule.exports = function words(str, delimiter) {\n  if (isBlank(str)) return [];\n  return trim(str, delimiter).split(delimiter || /\\s+/);\n};\n\n},{\"./isBlank\":25,\"./trim\":60}]},{},[14])\n(14)\n});"]}