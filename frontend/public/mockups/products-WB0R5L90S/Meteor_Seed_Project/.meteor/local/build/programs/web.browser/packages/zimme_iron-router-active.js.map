)]}'
{"version":3,"sources":["zimme:iron-router-active/client/helpers.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;EAAA;;AAAA,WAAW,SAAC,IAAD,EAAO,OAAP;AACT;;IADgB,UAAU;GAC1B;AAAA,SAAO,IAAP;AACA,MAAuB,OAAvB;AAAA,WAAO,OAAO,KAAd;GADA;AAAA,EAEA,OAAO,OAAO,QAAP,GAAkB,CAAC,CAAC,UAAF,CAAa,IAAb,CAFzB;SAIA,SAAC,IAAD;AACE;AAAA,UAAO,gBAAgB,SAAS,CAAC,EAAjC;AACE,YAAU,UAAM,MAAE,IAAF,GAAQ,uCAAR,IACd,CAAC,UAAM,IAAN,GAAY,qCAAb,CADc,GAEd,MAAE,KAAI,CAAC,SAAL,CAAe,IAAf,EAAF,CAFQ,CAAV,CADF;KAAA;AAAA,IAKA,UACE;AAAA,iBAAW,KAAK,CAAC,QAAN,CAAe,MAAf,CAAX;AAAA,MACA,OAAO,MADP;KANF;AAAA,IASA,MAAM,IAAI,CAAC,IAAX,EAAiB,OAAjB,CATA;AAAA,IAWA,aAAa,MAAM,CAAC,OAAP,EAXb;AAaA;AAAA,aAAO,KAAP;KAbA;AAAA,IAeA,OAAqB,IAAI,CAAC,IAA1B,EAAC,0BAAD,EAAY,kBAfZ;;MAiBA,YAAgB,OAAH,GAAgB,UAAhB,GAAgC;KAjB7C;AAmBA,QAAiB,SAAQ,MAAzB;AAAA,eAAS,IAAT;KAnBA;AAAA,IAqBA,OAAO,QAAQ,UAAR,EAAoB,KAApB,EAA2B,MAA3B,CArBP;AAuBA,QAAmB,OAAnB;AAAA,aAAO,KAAP;KAvBA;AAyBA,QAAG,IAAH;aAAa,UAAb;KAAA;aAA4B,MAA5B;KA1BF;EAAA,EALS;AAAA,CAAX;;AAAA,OAiCA,GAAU,SAAC,UAAD,EAAa,GAAb,EAAkB,MAAlB;AACR;;IAD0B,SAAS;GACnC;AAAA,MAAG,MAAH;AACE,cAAU,UAAU,CAAC,QAAQ,CAAC,GAApB,EAAyB,CAAC,IAApC,CADF;GAAA;AAIE,sDAA0B,CAAE,OAAlB,WAAV,CAJF;GAAA;AAAA,EAMA,KAAS,WAAO,GAAP,EAAY,GAAZ,CANT;SAQA,EAAE,CAAC,IAAH,CAAQ,OAAR,EATQ;AAAA,CAjCV;;AAAA,OA4CA,GACE;AAAA,iBAAe,SAAS,OAAT,CAAf;AAAA,EAEA,cAAc,SAAS,MAAT,CAFd;AAAA,EAIA,kBAAkB,SAAS,OAAT,EAAkB,IAAlB,CAJlB;AAAA,EAMA,iBAAiB,SAAS,MAAT,EAAiB,IAAjB,CANjB;CA7CF;;AAqDA;;uBAAA;AAAA,UAAQ,CAAC,cAAT,CAAwB,IAAxB,EAA8B,IAA9B;AAAA,CArDA","file":"/packages/zimme_iron-router-active.js","sourcesContent":["isActive = (type, inverse = false) ->\n  name = 'is'\n  name = name + 'Not' if inverse\n  name = name + 'Active' + s.capitalize type\n\n  (view) ->\n    unless view instanceof Spacebars.kw\n      throw new Error \"#{name} options must be key value pair such \" +\n        \"as {{#{name} regex='route/path'}}. You passed: \" +\n        \"#{JSON.stringify view}\"\n\n    pattern =\n      className: Match.Optional String\n      regex: String\n\n    check view.hash, pattern\n\n    controller = Router.current()\n\n    return false unless controller\n\n    {className, regex} = view.hash\n\n    className ?= if inverse then 'disabled' else 'active'\n\n    isPath = true if type is 'path'\n\n    test = testExp controller, regex, isPath\n\n    test = not test if inverse\n\n    if test then className else false\n\ntestExp = (controller, exp, isPath = false) ->\n  if isPath\n    pattern = controller.location.get().path\n\n  else\n    pattern = controller.route?.getName()\n\n  re = new RegExp exp, 'i'\n\n  re.test pattern\n\nhelpers =\n  isActiveRoute: isActive 'route'\n\n  isActivePath: isActive 'path'\n\n  isNotActiveRoute: isActive 'route', true\n\n  isNotActivePath: isActive 'path', true\n\nTemplate.registerHelper name, func for own name, func of helpers\n"]}