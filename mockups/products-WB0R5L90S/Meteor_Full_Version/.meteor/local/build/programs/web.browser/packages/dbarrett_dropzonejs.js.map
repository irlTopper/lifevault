)]}'
{"version":3,"file":"/packages/dbarrett:dropzonejs.js","sources":["dbarrett:dropzonejs/lib/3.10.2/dropzone.js","dbarrett:dropzonejs/lib/dbarrett:dropzonejs.html","dbarrett:dropzonejs/lib/dbarrett:dropzonejs.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,a;;AAEA,G;AACA,gC;AACA,E;AACA,uB;AACA,2B;AACA,c;AACA,G;;AAEA,wB;AACA,qC;AACA,mE;;AAEA,0E;AACA,4C;AACA,8D;AACA,6B;AACA,G;;AAEA,wB;AACA,C;;AAEA,G;AACA,sB;AACA,G;;AAEA,qB;;AAEA,G;AACA,wD;AACA,E;AACA,uB;AACA,+B;AACA,e;AACA,G;;AAEA,gD;AACA,2B;AACA,0B;AACA,I;AACA,E;;AAEA,G;AACA,wD;AACA,E;AACA,uB;AACA,2B;AACA,e;AACA,G;;AAEA,2C;AACA,2B;AACA,oB;AACA,I;AACA,E;AACA,wE;;AAEA,G;AACA,oB;AACA,G;;AAEA,yB;;AAEA,G;AACA,8B;AACA,E;AACA,c;AACA,G;;AAEA,uB;AACA,6B;AACA,E;;AAEA,G;AACA,gC;AACA,E;AACA,sB;AACA,mB;AACA,e;AACA,G;;AAEA,qB;AACA,sC;AACA,sC;AACA,G;AACA,a;AACA,C;;AAEA,G;AACA,yC;AACA,E;AACA,wB;AACA,uB;AACA,oB;AACA,c;AACA,G;;AAEA,sB;AACA,yD;AACA,0C;AACA,yD;AACA,c;AACA,c;AACA,E;;AAEA,G;AACA,yD;AACA,mC;AACA,E;AACA,wB;AACA,uB;AACA,oB;AACA,c;AACA,G;;AAEA,6C;AACA,kB;AACA,0C;;AAEA,iB;AACA,wB;AACA,8B;AACA,G;;AAEA,a;AACA,qB;AACA,c;AACA,E;;AAEA,G;AACA,+C;AACA,wB;AACA,E;AACA,wB;AACA,uB;AACA,oB;AACA,c;AACA,G;;AAEA,uB;AACA,kC;AACA,sC;AACA,4D;AACA,0C;;AAEA,Q;AACA,8B;AACA,yB;AACA,gB;AACA,G;;AAEA,mB;AACA,yC;AACA,8B;;AAEA,wB;AACA,8B;AACA,kC;AACA,gB;AACA,G;;AAEA,4B;AACA,S;AACA,8C;AACA,sB;AACA,oC;AACA,6B;AACA,Y;AACA,K;AACA,G;AACA,c;AACA,E;;AAEA,G;AACA,oC;AACA,E;AACA,wB;AACA,qB;AACA,oB;AACA,G;;AAEA,yC;AACA,0C;AACA,wC;AACA,yC;;AAEA,kB;AACA,mC;AACA,2D;AACA,qC;AACA,K;AACA,G;;AAEA,c;AACA,E;;AAEA,G;AACA,yC;AACA,E;AACA,wB;AACA,kB;AACA,c;AACA,G;;AAEA,8C;AACA,0C;AACA,sC;AACA,E;;AAEA,G;AACA,8C;AACA,E;AACA,wB;AACA,oB;AACA,c;AACA,G;;AAEA,iD;AACA,yC;AACA,E;;AAEA,G;;AAEA,yD;;;AAGA,G;AACA,oB;AACA,G;AACA,qD;;AAEA,G;;AAEA,yE;;AAEA,E;AACA,E;AACA,+D;AACA,E;AACA,kC;AACA,E;AACA,+E;AACA,gF;AACA,+E;AACA,4E;AACA,wE;AACA,2D;AACA,E;AACA,6E;AACA,sD;AACA,E;AACA,6E;AACA,2E;AACA,8E;AACA,yE;AACA,gF;AACA,4E;AACA,gB;AACA,E;AACA,G;;AAEA,a;AACA,kG;AACA,kC;AACA,oS;AACA,uB;;AAEA,yG;;AAEA,uB;;AAEA,gC;AACA,e;;AAEA,gC;;;AAGA,M;AACA,iF;AACA,I;AACA,gD;AACA,I;AACA,iD;AACA,O;;AAEA,ma;;AAEA,yC;AACA,gB;AACA,qB;AACA,6B;AACA,yB;AACA,4B;AACA,uB;AACA,wB;AACA,kC;AACA,+B;AACA,0B;AACA,2B;AACA,qB;AACA,iB;AACA,sB;AACA,8B;AACA,0B;AACA,8B;AACA,6B;AACA,sB;AACA,4B;AACA,8B;AACA,sD;AACA,qF;AACA,0G;AACA,6F;AACA,kE;AACA,sE;AACA,wC;AACA,mF;AACA,oC;AACA,uC;AACA,iE;AACA,oC;AACA,sB;AACA,Q;AACA,wB;AACA,oB;AACA,Q;AACA,2B;AACA,4B;AACA,wD;AACA,2F;AACA,wD;AACA,2D;AACA,2B;AACA,6D;AACA,mC;AACA,2C;AACA,qB;AACA,W;AACA,S;AACA,8B;AACA,mG;AACA,mD;AACA,S;AACA,8D;AACA,mB;AACA,8D;AACA,S;AACA,gE;AACA,Q;AACA,8B;AACA,qC;AACA,gB;AACA,kB;AACA,kB;AACA,+B;AACA,gC;AACA,U;AACA,4C;AACA,oD;AACA,sD;AACA,kE;AACA,wC;AACA,0C;AACA,2C;AACA,oD;AACA,4C;AACA,0D;AACA,S;AACA,kD;AACA,yE;AACA,0C;AACA,wC;AACA,gB;AACA,oC;AACA,yC;AACA,sD;AACA,kB;AACA,uC;AACA,sD;AACA,W;AACA,S;AACA,qD;AACA,uD;AACA,oB;AACA,Q;;AAEA,Q;AACA,8E;AACA,gF;AACA,2C;AACA,gF;AACA,iF;AACA,wC;AACA,S;AACA,yB;AACA,8D;AACA,Q;AACA,sB;AACA,4B;AACA,8D;AACA,Q;AACA,8B;AACA,2D;AACA,Q;AACA,6B;AACA,2D;AACA,Q;AACA,8B;AACA,8D;AACA,Q;AACA,kB;AACA,yB;AACA,2D;AACA,Q;AACA,iC;AACA,4G;AACA,sD;AACA,mD;AACA,S;AACA,qC;AACA,4F;AACA,qD;AACA,kE;AACA,wE;AACA,6D;AACA,4B;AACA,yC;AACA,W;AACA,yE;AACA,gE;AACA,6B;AACA,sD;AACA,W;AACA,4C;AACA,sK;AACA,8D;AACA,W;AACA,8C;AACA,gC;AACA,iC;AACA,kC;AACA,uD;AACA,gG;AACA,gD;AACA,mB;AACA,sB;AACA,+D;AACA,gG;AACA,kD;AACA,qB;AACA,wB;AACA,gD;AACA,iB;AACA,e;AACA,c;AACA,mB;AACA,2E;AACA,wB;AACA,gE;AACA,mC;AACA,iF;AACA,W;AACA,0B;AACA,S;AACA,Q;AACA,mC;AACA,iB;AACA,kC;AACA,qD;AACA,6D;AACA,W;AACA,S;AACA,kD;AACA,Q;AACA,0C;AACA,uD;AACA,kC;AACA,kE;AACA,gE;AACA,6E;AACA,wB;AACA,6D;AACA,wC;AACA,6C;AACA,0D;AACA,W;AACA,0B;AACA,S;AACA,Q;AACA,sC;AACA,2C;AACA,kC;AACA,wD;AACA,6D;AACA,oC;AACA,W;AACA,gF;AACA,wB;AACA,6D;AACA,4B;AACA,sD;AACA,W;AACA,0B;AACA,S;AACA,Q;AACA,0B;AACA,kC;AACA,kC;AACA,6D;AACA,iC;AACA,gF;AACA,W;AACA,S;AACA,Q;AACA,+B;AACA,2D;AACA,2C;AACA,kC;AACA,kF;AACA,wB;AACA,6D;AACA,4B;AACA,kE;AACA,W;AACA,0B;AACA,S;AACA,Q;AACA,gC;AACA,oB;AACA,4B;AACA,+B;AACA,kC;AACA,iE;AACA,S;AACA,Q;AACA,4B;AACA,gC;AACA,4D;AACA,Q;AACA,6B;AACA,gC;AACA,+B;AACA,4E;AACA,S;AACA,Q;AACA,6B;AACA,6B;AACA,4B;AACA,whB;AACA,M;;AAEA,yB;AACA,sD;AACA,+F;AACA,4D;AACA,6B;AACA,6B;AACA,4B;AACA,4B;AACA,S;AACA,O;AACA,oB;AACA,M;;AAEA,yC;AACA,yC;AACA,6B;AACA,sC;AACA,oG;AACA,kC;AACA,0B;AACA,sB;AACA,6C;AACA,4D;AACA,O;AACA,+D;AACA,qD;AACA,O;AACA,kC;AACA,sD;AACA,O;AACA,oC;AACA,mC;AACA,6F;AACA,qG;AACA,yE;AACA,gD;AACA,O;AACA,qC;AACA,+D;AACA,O;AACA,8B;AACA,4C;AACA,O;AACA,yE;AACA,8H;AACA,O;AACA,2C;AACA,oE;AACA,8C;AACA,O;AACA,8D;AACA,2E;AACA,kD;AACA,O;AACA,qD;AACA,6C;AACA,4G;AACA,gB;AACA,gD;AACA,S;AACA,O;AACA,mC;AACA,8C;AACA,kD;AACA,gB;AACA,6F;AACA,S;AACA,O;AACA,kB;AACA,K;;AAEA,sD;AACA,yC;AACA,wB;AACA,oB;AACA,yD;AACA,wB;AACA,4B;AACA,8B;AACA,S;AACA,O;AACA,sB;AACA,M;;AAEA,sD;AACA,yC;AACA,wB;AACA,oB;AACA,yD;AACA,wB;AACA,6B;AACA,8B;AACA,S;AACA,O;AACA,sB;AACA,M;;AAEA,8D;AACA,yC;AACA,wB;AACA,oB;AACA,yD;AACA,wB;AACA,qC;AACA,8B;AACA,S;AACA,O;AACA,sB;AACA,M;;AAEA,oD;AACA,sD;AACA,M;;AAEA,uD;AACA,yD;AACA,M;;AAEA,oD;AACA,yC;AACA,wB;AACA,oB;AACA,yD;AACA,wB;AACA,oF;AACA,8B;AACA,S;AACA,O;AACA,sB;AACA,M;;AAEA,0C;AACA,gF;AACA,4C;AACA,oE;AACA,O;AACA,sG;AACA,4J;AACA,O;AACA,0C;AACA,iD;AACA,6B;AACA,wC;AACA,+D;AACA,a;AACA,oE;AACA,+D;AACA,iF;AACA,yE;AACA,a;AACA,gE;AACA,sD;AACA,wF;AACA,a;AACA,8D;AACA,8D;AACA,kD;AACA,mD;AACA,qD;AACA,oD;AACA,6D;AACA,gF;AACA,wC;AACA,kD;AACA,iC;AACA,oE;AACA,mC;AACA,sC;AACA,iB;AACA,e;AACA,4C;AACA,e;AACA,Y;AACA,iB;AACA,+B;AACA,O;AACA,uE;AACA,0B;AACA,0D;AACA,8B;AACA,oD;AACA,O;AACA,kD;AACA,2B;AACA,mD;AACA,U;AACA,gB;AACA,+C;AACA,2B;AACA,mD;AACA,U;AACA,gB;AACA,4C;AACA,+B;AACA,8C;AACA,U;AACA,gB;AACA,4C;AACA,+B;AACA,8F;AACA,2C;AACA,iD;AACA,mB;AACA,W;AACA,U;AACA,gB;AACA,mC;AACA,4B;AACA,+B;AACA,oC;AACA,gB;AACA,uC;AACA,S;AACA,Q;AACA,wB;AACA,S;AACA,gC;AACA,mB;AACA,2C;AACA,kC;AACA,kD;AACA,gB;AACA,qB;AACA,2C;AACA,kC;AACA,iC;AACA,kD;AACA,gB;AACA,qB;AACA,0C;AACA,kC;AACA,yB;AACA,qB;AACA,sD;AACA,mC;AACA,qG;AACA,iC;AACA,iD;AACA,gB;AACA,qB;AACA,2C;AACA,kC;AACA,kD;AACA,gB;AACA,qB;AACA,sC;AACA,kC;AACA,iC;AACA,qC;AACA,gB;AACA,qB;AACA,yC;AACA,kC;AACA,gD;AACA,gB;AACA,oB;AACA,W;AACA,S;AACA,Q;AACA,uD;AACA,2C;AACA,uC;AACA,sC;AACA,qB;AACA,sC;AACA,+K;AACA,uD;AACA,iB;AACA,e;AACA,a;AACA,a;AACA,U;AACA,gB;AACA,oB;AACA,0C;AACA,M;;AAEA,6C;AACA,e;AACA,qB;AACA,gC;AACA,6E;AACA,0E;AACA,oC;AACA,O;AACA,mC;AACA,4E;AACA,M;;AAEA,+D;AACA,6F;AACA,yB;AACA,qB;AACA,0C;AACA,+B;AACA,qC;AACA,2D;AACA,0B;AACA,kD;AACA,0C;AACA,S;AACA,gE;AACA,c;AACA,kC;AACA,O;AACA,+F;AACA,M;;AAEA,oD;AACA,yD;AACA,yC;AACA,c;AACA,gG;AACA,O;AACA,M;;AAEA,qD;AACA,uD;AACA,0D;AACA,gC;AACA,O;AACA,mD;AACA,0C;AACA,uE;AACA,O;AACA,+M;AACA,oD;AACA,4C;AACA,kK;AACA,iC;AACA,c;AACA,oE;AACA,iE;AACA,O;AACA,0C;AACA,M;;AAEA,yD;AACA,yD;AACA,wC;AACA,yB;AACA,+D;AACA,4B;AACA,wD;AACA,sB;AACA,W;AACA,S;AACA,Q;AACA,6B;AACA,yD;AACA,2B;AACA,iF;AACA,0B;AACA,S;AACA,O;AACA,M;;AAEA,yD;AACA,sE;AACA,4B;AACA,oB;AACA,yD;AACA,oC;AACA,mC;AACA,+B;AACA,0C;AACA,yB;AACA,gC;AACA,oC;AACA,8F;AACA,W;AACA,2B;AACA,c;AACA,O;AACA,sB;AACA,M;;AAEA,0D;AACA,sE;AACA,4B;AACA,oB;AACA,yD;AACA,oC;AACA,mC;AACA,+B;AACA,0C;AACA,yB;AACA,gC;AACA,oC;AACA,iG;AACA,W;AACA,2B;AACA,c;AACA,O;AACA,sB;AACA,M;;AAEA,6C;AACA,yC;AACA,wD;AACA,wD;AACA,S;AACA,kC;AACA,wB;AACA,oB;AACA,yD;AACA,wB;AACA,+C;AACA,O;AACA,sB;AACA,M;;AAEA,4C;AACA,wD;AACA,qD;AACA,S;AACA,wC;AACA,M;;AAEA,kD;AACA,iB;AACA,mD;AACA,uD;AACA,uB;AACA,mD;AACA,gD;AACA,uB;AACA,4C;AACA,yC;AACA,uB;AACA,qC;AACA,kC;AACA,uB;AACA,c;AACA,yB;AACA,qB;AACA,O;AACA,0E;AACA,M;;AAEA,iE;AACA,uG;AACA,uE;AACA,mD;AACA,S;AACA,kE;AACA,c;AACA,qE;AACA,O;AACA,M;;AAEA,2C;AACA,uB;AACA,4B;AACA,e;AACA,O;AACA,2B;AACA,mC;AACA,yB;AACA,qC;AACA,2E;AACA,yC;AACA,gB;AACA,kC;AACA,S;AACA,O;AACA,M;;AAEA,4C;AACA,sB;AACA,kG;AACA,e;AACA,O;AACA,4B;AACA,oC;AACA,yB;AACA,8C;AACA,O;AACA,M;;AAEA,sD;AACA,mC;AACA,oB;AACA,0D;AACA,yB;AACA,0C;AACA,O;AACA,sB;AACA,M;;AAEA,6D;AACA,0C;AACA,oB;AACA,0D;AACA,yB;AACA,mF;AACA,6B;AACA,0D;AACA,yC;AACA,0E;AACA,kB;AACA,kC;AACA,W;AACA,4C;AACA,4D;AACA,0D;AACA,kB;AACA,kC;AACA,W;AACA,gB;AACA,gC;AACA,S;AACA,O;AACA,sB;AACA,M;;AAEA,2E;AACA,mC;AACA,2C;AACA,wC;AACA,kC;AACA,8B;AACA,gE;AACA,gC;AACA,+B;AACA,yC;AACA,2F;AACA,yB;AACA,iB;AACA,4D;AACA,2C;AACA,iB;AACA,2C;AACA,gF;AACA,a;AACA,W;AACA,U;AACA,e;AACA,mE;AACA,6I;AACA,S;AACA,M;;AAEA,sD;AACA,+D;AACA,0K;AACA,2E;AACA,sD;AACA,8G;AACA,+F;AACA,mD;AACA,c;AACA,0D;AACA,O;AACA,M;;AAEA,iD;AACA,qB;AACA,oB;AACA,yB;AACA,oB;AACA,Q;AACA,4B;AACA,mC;AACA,mC;AACA,mC;AACA,iD;AACA,gC;AACA,sB;AACA,kC;AACA,kD;AACA,kB;AACA,iC;AACA,0C;AACA,sC;AACA,a;AACA,W;AACA,qD;AACA,U;AACA,gB;AACA,M;;AAEA,uD;AACA,yB;AACA,0D;AACA,yB;AACA,+B;AACA,O;AACA,kB;AACA,M;;AAEA,qD;AACA,qE;AACA,sC;AACA,4C;AACA,+C;AACA,+B;AACA,0C;AACA,c;AACA,wB;AACA,S;AACA,c;AACA,4G;AACA,O;AACA,M;;AAEA,4C;;AAEA,oD;;AAEA,2D;AACA,6I;AACA,wC;AACA,6C;AACA,6B;AACA,kD;AACA,Y;AACA,sB;AACA,O;AACA,M;;AAEA,4D;AACA,2E;AACA,e;AACA,O;AACA,uC;AACA,kF;AACA,2B;AACA,6C;AACA,gD;AACA,U;AACA,gB;AACA,M;;AAEA,oD;AACA,+C;AACA,gC;AACA,O;AACA,6C;AACA,qC;AACA,oC;AACA,kC;AACA,O;AACA,M;;AAEA,qE;AACA,+B;AACA,sC;AACA,kC;AACA,O;AACA,gC;AACA,yD;AACA,wB;AACA,sE;AACA,gC;AACA,S;AACA,O;AACA,kB;AACA,M;;AAEA,mE;AACA,qB;AACA,kC;AACA,4C;AACA,2B;AACA,kB;AACA,8C;AACA,mC;AACA,8E;AACA,mC;AACA,qC;AACA,gE;AACA,8C;AACA,wD;AACA,a;AACA,+C;AACA,0D;AACA,a;AACA,sD;AACA,0C;AACA,+C;AACA,iD;AACA,sT;AACA,sD;AACA,qD;AACA,mC;AACA,gC;AACA,a;AACA,Y;AACA,6C;AACA,U;AACA,e;AACA,4C;AACA,M;;AAEA,kD;AACA,4D;AACA,qD;AACA,yD;AACA,2B;AACA,gD;AACA,e;AACA,O;AACA,0C;AACA,sC;AACA,e;AACA,O;AACA,wC;AACA,2F;AACA,c;AACA,qC;AACA,oC;AACA,mB;AACA,W;AACA,gD;AACA,c;AACA,S;AACA,O;AACA,M;;AAEA,qD;AACA,uC;AACA,M;;AAEA,uD;AACA,yB;AACA,0D;AACA,yB;AACA,+B;AACA,yC;AACA,sC;AACA,O;AACA,wC;AACA,+C;AACA,O;AACA,qC;AACA,M;;AAEA,yD;AACA,sB;AACA,kC;AACA,qC;AACA,0B;AACA,sB;AACA,2D;AACA,0B;AACA,iC;AACA,gC;AACA,W;AACA,S;AACA,wB;AACA,oB;AACA,M;;AAEA,sD;AACA,+D;AACA,+C;AACA,uD;AACA,mE;AACA,yC;AACA,iD;AACA,S;AACA,yB;AACA,qE;AACA,yC;AACA,6C;AACA,S;AACA,0C;AACA,sD;AACA,S;AACA,uF;AACA,wC;AACA,oC;AACA,0C;AACA,gD;AACA,S;AACA,O;AACA,0C;AACA,mC;AACA,O;AACA,M;;AAEA,oD;AACA,sC;AACA,M;;AAEA,sD;AACA,gQ;AACA,iC;AACA,0D;AACA,yB;AACA,uB;AACA,O;AACA,4D;AACA,2D;AACA,sB;AACA,sC;AACA,2B;AACA,kC;AACA,wB;AACA,gE;AACA,6B;AACA,iJ;AACA,W;AACA,0B;AACA,U;AACA,e;AACA,yC;AACA,4B;AACA,oF;AACA,0B;AACA,gD;AACA,kE;AACA,+B;AACA,6B;AACA,mC;AACA,+B;AACA,mC;AACA,gB;AACA,a;AACA,kB;AACA,oC;AACA,2B;AACA,kE;AACA,+B;AACA,mG;AACA,yC;AACA,e;AACA,8C;AACA,wD;AACA,a;AACA,mC;AACA,qB;AACA,a;AACA,W;AACA,wB;AACA,gE;AACA,6B;AACA,+F;AACA,W;AACA,0B;AACA,U;AACA,e;AACA,qC;AACA,4B;AACA,mB;AACA,sD;AACA,mB;AACA,W;AACA,qC;AACA,mB;AACA,W;AACA,sC;AACA,4H;AACA,iB;AACA,8C;AACA,8B;AACA,yB;AACA,8D;AACA,a;AACA,W;AACA,2B;AACA,8D;AACA,iC;AACA,kB;AACA,uD;AACA,W;AACA,U;AACA,e;AACA,sC;AACA,2B;AACA,sD;AACA,mB;AACA,W;AACA,+B;AACA,U;AACA,e;AACA,6D;AACA,8C;AACA,iB;AACA,qC;AACA,oC;AACA,4C;AACA,Q;AACA,iC;AACA,8C;AACA,O;AACA,mC;AACA,0C;AACA,sD;AACA,O;AACA,gC;AACA,gC;AACA,oC;AACA,4B;AACA,6B;AACA,sC;AACA,S;AACA,O;AACA,4D;AACA,yB;AACA,kD;AACA,O;AACA,wC;AACA,2D;AACA,O;AACA,4C;AACA,iF;AACA,8D;AACA,4B;AACA,iD;AACA,iD;AACA,6E;AACA,kC;AACA,kE;AACA,iC;AACA,oC;AACA,yD;AACA,e;AACA,a;AACA,8H;AACA,oD;AACA,W;AACA,S;AACA,O;AACA,wH;AACA,wE;AACA,O;AACA,gC;AACA,M;;AAEA,qE;AACA,yB;AACA,0D;AACA,yB;AACA,uC;AACA,oD;AACA,oC;AACA,O;AACA,wC;AACA,6D;AACA,6C;AACA,O;AACA,0C;AACA,mC;AACA,O;AACA,M;;AAEA,yE;AACA,yB;AACA,0D;AACA,yB;AACA,qC;AACA,+C;AACA,oC;AACA,O;AACA,wC;AACA,wD;AACA,6C;AACA,O;AACA,0C;AACA,mC;AACA,O;AACA,M;;AAEA,oB;;AAEA,S;;AAEA,8B;;AAEA,wB;;AAEA,kD;AACA,qC;AACA,oE;AACA,Y;AACA,oB;AACA,K;AACA,I;;AAEA,0B;;AAEA,2C;AACA,sC;AACA,gD;AACA,K;AACA,gE;AACA,wO;AACA,K;AACA,4B;AACA,I;;AAEA,gC;;AAEA,kC;AACA,+D;AACA,oC;AACA,yD;AACA,Y;AACA,qB;AACA,0C;AACA,mC;AACA,sB;AACA,+D;AACA,4B;AACA,wD;AACA,8C;AACA,kB;AACA,kC;AACA,W;AACA,S;AACA,wB;AACA,Q;AACA,0D;AACA,2D;AACA,K;AACA,kB;AACA,4D;AACA,+B;AACA,2D;AACA,8C;AACA,c;AACA,8B;AACA,O;AACA,K;AACA,oB;AACA,I;;AAEA,oE;;AAEA,4C;AACA,8C;AACA,0B;AACA,0H;AACA,0D;AACA,+B;AACA,c;AACA,4C;AACA,2D;AACA,2B;AACA,gD;AACA,mC;AACA,qB;AACA,W;AACA,S;AACA,O;AACA,Y;AACA,6B;AACA,K;AACA,0B;AACA,I;;AAEA,0C;AACA,iC;AACA,kB;AACA,uD;AACA,sB;AACA,kC;AACA,4B;AACA,O;AACA,K;AACA,oB;AACA,I;;AAEA,4B;AACA,sD;AACA,2C;AACA,O;AACA,I;;AAEA,6C;AACA,Y;AACA,wC;AACA,2B;AACA,6B;AACA,I;;AAEA,yD;AACA,gC;AACA,kB;AACA,K;AACA,0C;AACA,kC;AACA,oB;AACA,O;AACA,K;AACA,iB;AACA,I;;AAEA,4C;AACA,gB;AACA,iC;AACA,2C;AACA,qC;AACA,mB;AACA,K;AACA,0B;AACA,wH;AACA,K;AACA,mB;AACA,I;;AAEA,8C;AACA,mD;AACA,+B;AACA,oB;AACA,W;AACA,0D;AACA,uB;AACA,mD;AACA,S;AACA,wB;AACA,mB;AACA,wB;AACA,O;AACA,yC;AACA,oB;AACA,4C;AACA,2D;AACA,sB;AACA,0B;AACA,O;AACA,sC;AACA,uB;AACA,K;AACA,mD;AACA,yI;AACA,K;AACA,oB;AACA,I;;AAEA,6D;AACA,mC;AACA,wB;AACA,kC;AACA,wB;AACA,K;AACA,I;;AAEA,wD;AACA,oD;AACA,yB;AACA,kB;AACA,K;AACA,6C;AACA,yB;AACA,iD;AACA,gE;AACA,oC;AACA,mC;AACA,wC;AACA,mH;AACA,sB;AACA,S;AACA,2C;AACA,8D;AACA,sB;AACA,S;AACA,c;AACA,qC;AACA,sB;AACA,S;AACA,O;AACA,K;AACA,iB;AACA,I;;AAEA,yD;AACA,4C;AACA,mC;AACA,2C;AACA,S;AACA,M;AACA,G;;AAEA,yD;AACA,8B;AACA,U;AACA,+B;AACA,G;;AAEA,2B;;AAEA,6B;;AAEA,sC;;AAEA,mC;;AAEA,2C;;AAEA,iC;;AAEA,2B;;AAEA,+B;;;AAGA,I;AACA,E;AACA,wB;AACA,0F;AACA,yE;AACA,K;;AAEA,wC;AACA,4D;AACA,0B;AACA,2B;AACA,8C;AACA,qB;AACA,uB;AACA,kC;AACA,6B;AACA,8C;AACA,W;AACA,Y;AACA,Y;AACA,qB;AACA,qC;AACA,wB;AACA,gB;AACA,c;AACA,gB;AACA,O;AACA,0B;AACA,K;AACA,oB;AACA,sB;AACA,e;AACA,Y;AACA,mB;AACA,K;AACA,I;;AAEA,wE;AACA,wB;AACA,gD;AACA,gF;AACA,I;;;AAGA,I;AACA,qB;AACA,I;AACA,qD;AACA,wD;AACA,sB;AACA,iB;AACA,iB;AACA,I;AACA,S;AACA,+C;AACA,0D;AACA,K;;AAEA,qC;AACA,wD;AACA,iB;AACA,e;AACA,uB;AACA,+B;AACA,sE;AACA,yE;AACA,6C;AACA,wB;AACA,2E;AACA,e;AACA,O;AACA,sE;AACA,mC;AACA,yC;AACA,O;AACA,M;AACA,uB;AACA,Y;AACA,W;AACA,8B;AACA,wB;AACA,mB;AACA,6B;AACA,e;AACA,O;AACA,0B;AACA,M;AACA,wC;AACA,mD;AACA,a;AACA,kC;AACA,2B;AACA,kB;AACA,iB;AACA,S;AACA,O;AACA,sD;AACA,sD;AACA,iD;AACA,K;AACA,I;;AAEA,+C;AACA,gC;AACA,iC;AACA,K;AACA,I;;AAEA,wD;;AAEA,c;;AAEA,G;;AAEA,iC;AACA,uC;AACA,uD;AACA,wD;AACA,Q;AACA,yC;AACA,C;AACA,I;;;;;;;;;;;;;;;;;;;;AC/0DA,iC;AACA,sE;AACA,kB;AACA,mB;AACA,oB;AACA,mD;AACA,M;AACA,uB;AACA,K;AACA,I;;;;;;;;;;;;;;;;;;;ACVA,yC;AACA,iE;AACA,E;AACA,oB;AACA,4E;AACA,Q;AACA,wC;AACA,G;AACA,E;AACA,E;;AAEA,mB;AACA,c;AACA,Q;AACA,K;AACA,E","sourcesContent":[";(function(){\n\n/**\n * Require the module at `name`.\n *\n * @param {String} name\n * @return {Object} exports\n * @api public\n */\n\nfunction require(name) {\n  var module = require.modules[name];\n  if (!module) throw new Error('failed to require \"' + name + '\"');\n\n  if (!('exports' in module) && typeof module.definition === 'function') {\n    module.client = module.component = true;\n    module.definition.call(this, module.exports = {}, module);\n    delete module.definition;\n  }\n\n  return module.exports;\n}\n\n/**\n * Registered modules.\n */\n\nrequire.modules = {};\n\n/**\n * Register module at `name` with callback `definition`.\n *\n * @param {String} name\n * @param {Function} definition\n * @api private\n */\n\nrequire.register = function (name, definition) {\n  require.modules[name] = {\n    definition: definition\n  };\n};\n\n/**\n * Define a module's exports immediately with `exports`.\n *\n * @param {String} name\n * @param {Generic} exports\n * @api private\n */\n\nrequire.define = function (name, exports) {\n  require.modules[name] = {\n    exports: exports\n  };\n};\nrequire.register(\"component~emitter@1.1.2\", function (exports, module) {\n\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n});\n\nrequire.register(\"dropzone\", function (exports, module) {\n\n\n/**\n * Exposing dropzone\n */\nmodule.exports = require(\"dropzone/lib/dropzone.js\");\n\n});\n\nrequire.register(\"dropzone/lib/dropzone.js\", function (exports, module) {\n\n/*\n *\n * More info at [www.dropzonejs.com](http://www.dropzonejs.com)\n *\n * Copyright (c) 2012, Matias Meno\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\n\n(function() {\n  var Dropzone, Em, camelize, contentLoaded, detectVerticalSquash, drawImageIOSFix, noop, without,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __slice = [].slice;\n\n  Em = typeof Emitter !== \"undefined\" && Emitter !== null ? Emitter : require(\"component~emitter@1.1.2\");\n\n  noop = function() {};\n\n  Dropzone = (function(_super) {\n    var extend;\n\n    __extends(Dropzone, _super);\n\n\n    /*\n    This is a list of all available events you can register on a dropzone object.\n    \n    You can register an event handler like this:\n    \n        dropzone.on(\"dragEnter\", function() { });\n     */\n\n    Dropzone.prototype.events = [\"drop\", \"dragstart\", \"dragend\", \"dragenter\", \"dragover\", \"dragleave\", \"addedfile\", \"removedfile\", \"thumbnail\", \"error\", \"errormultiple\", \"processing\", \"processingmultiple\", \"uploadprogress\", \"totaluploadprogress\", \"sending\", \"sendingmultiple\", \"success\", \"successmultiple\", \"canceled\", \"canceledmultiple\", \"complete\", \"completemultiple\", \"reset\", \"maxfilesexceeded\", \"maxfilesreached\"];\n\n    Dropzone.prototype.defaultOptions = {\n      url: null,\n      method: \"post\",\n      withCredentials: false,\n      parallelUploads: 2,\n      uploadMultiple: false,\n      maxFilesize: 256,\n      paramName: \"file\",\n      createImageThumbnails: true,\n      maxThumbnailFilesize: 10,\n      thumbnailWidth: 100,\n      thumbnailHeight: 100,\n      maxFiles: null,\n      params: {},\n      clickable: true,\n      ignoreHiddenFiles: true,\n      acceptedFiles: null,\n      acceptedMimeTypes: null,\n      autoProcessQueue: true,\n      autoQueue: true,\n      addRemoveLinks: false,\n      previewsContainer: null,\n      dictDefaultMessage: \"Drop files here to upload\",\n      dictFallbackMessage: \"Your browser does not support drag'n'drop file uploads.\",\n      dictFallbackText: \"Please use the fallback form below to upload your files like in the olden days.\",\n      dictFileTooBig: \"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.\",\n      dictInvalidFileType: \"You can't upload files of this type.\",\n      dictResponseError: \"Server responded with {{statusCode}} code.\",\n      dictCancelUpload: \"Cancel upload\",\n      dictCancelUploadConfirmation: \"Are you sure you want to cancel this upload?\",\n      dictRemoveFile: \"Remove file\",\n      dictRemoveFileConfirmation: null,\n      dictMaxFilesExceeded: \"You can not upload any more files.\",\n      accept: function(file, done) {\n        return done();\n      },\n      init: function() {\n        return noop;\n      },\n      forceFallback: false,\n      fallback: function() {\n        var child, messageElement, span, _i, _len, _ref;\n        this.element.className = \"\" + this.element.className + \" dz-browser-not-supported\";\n        _ref = this.element.getElementsByTagName(\"div\");\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          child = _ref[_i];\n          if (/(^| )dz-message($| )/.test(child.className)) {\n            messageElement = child;\n            child.className = \"dz-message\";\n            continue;\n          }\n        }\n        if (!messageElement) {\n          messageElement = Dropzone.createElement(\"<div class=\\\"dz-message\\\"><span></span></div>\");\n          this.element.appendChild(messageElement);\n        }\n        span = messageElement.getElementsByTagName(\"span\")[0];\n        if (span) {\n          span.textContent = this.options.dictFallbackMessage;\n        }\n        return this.element.appendChild(this.getFallbackForm());\n      },\n      resize: function(file) {\n        var info, srcRatio, trgRatio;\n        info = {\n          srcX: 0,\n          srcY: 0,\n          srcWidth: file.width,\n          srcHeight: file.height\n        };\n        srcRatio = file.width / file.height;\n        info.optWidth = this.options.thumbnailWidth;\n        info.optHeight = this.options.thumbnailHeight;\n        if ((info.optWidth == null) && (info.optHeight == null)) {\n          info.optWidth = info.srcWidth;\n          info.optHeight = info.srcHeight;\n        } else if (info.optWidth == null) {\n          info.optWidth = srcRatio * info.optHeight;\n        } else if (info.optHeight == null) {\n          info.optHeight = (1 / srcRatio) * info.optWidth;\n        }\n        trgRatio = info.optWidth / info.optHeight;\n        if (file.height < info.optHeight || file.width < info.optWidth) {\n          info.trgHeight = info.srcHeight;\n          info.trgWidth = info.srcWidth;\n        } else {\n          if (srcRatio > trgRatio) {\n            info.srcHeight = file.height;\n            info.srcWidth = info.srcHeight * trgRatio;\n          } else {\n            info.srcWidth = file.width;\n            info.srcHeight = info.srcWidth / trgRatio;\n          }\n        }\n        info.srcX = (file.width - info.srcWidth) / 2;\n        info.srcY = (file.height - info.srcHeight) / 2;\n        return info;\n      },\n\n      /*\n      Those functions register themselves to the events on init and handle all\n      the user interface specific stuff. Overwriting them won't break the upload\n      but can break the way it's displayed.\n      You can overwrite them if you don't like the default behavior. If you just\n      want to add an additional event handler, register it on the dropzone object\n      and don't overwrite those options.\n       */\n      drop: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      dragstart: noop,\n      dragend: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      dragenter: function(e) {\n        return this.element.classList.add(\"dz-drag-hover\");\n      },\n      dragover: function(e) {\n        return this.element.classList.add(\"dz-drag-hover\");\n      },\n      dragleave: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      paste: noop,\n      reset: function() {\n        return this.element.classList.remove(\"dz-started\");\n      },\n      addedfile: function(file) {\n        var node, removeFileEvent, removeLink, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;\n        if (this.element === this.previewsContainer) {\n          this.element.classList.add(\"dz-started\");\n        }\n        if (this.previewsContainer) {\n          file.previewElement = Dropzone.createElement(this.options.previewTemplate.trim());\n          file.previewTemplate = file.previewElement;\n          this.previewsContainer.appendChild(file.previewElement);\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-name]\");\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            node = _ref[_i];\n            node.textContent = file.name;\n          }\n          _ref1 = file.previewElement.querySelectorAll(\"[data-dz-size]\");\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            node = _ref1[_j];\n            node.innerHTML = this.filesize(file.size);\n          }\n          if (this.options.addRemoveLinks) {\n            file._removeLink = Dropzone.createElement(\"<a class=\\\"dz-remove\\\" href=\\\"javascript:undefined;\\\" data-dz-remove>\" + this.options.dictRemoveFile + \"</a>\");\n            file.previewElement.appendChild(file._removeLink);\n          }\n          removeFileEvent = (function(_this) {\n            return function(e) {\n              e.preventDefault();\n              e.stopPropagation();\n              if (file.status === Dropzone.UPLOADING) {\n                return Dropzone.confirm(_this.options.dictCancelUploadConfirmation, function() {\n                  return _this.removeFile(file);\n                });\n              } else {\n                if (_this.options.dictRemoveFileConfirmation) {\n                  return Dropzone.confirm(_this.options.dictRemoveFileConfirmation, function() {\n                    return _this.removeFile(file);\n                  });\n                } else {\n                  return _this.removeFile(file);\n                }\n              }\n            };\n          })(this);\n          _ref2 = file.previewElement.querySelectorAll(\"[data-dz-remove]\");\n          _results = [];\n          for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n            removeLink = _ref2[_k];\n            _results.push(removeLink.addEventListener(\"click\", removeFileEvent));\n          }\n          return _results;\n        }\n      },\n      removedfile: function(file) {\n        var _ref;\n        if (file.previewElement) {\n          if ((_ref = file.previewElement) != null) {\n            _ref.parentNode.removeChild(file.previewElement);\n          }\n        }\n        return this._updateMaxFilesReachedClass();\n      },\n      thumbnail: function(file, dataUrl) {\n        var thumbnailElement, _i, _len, _ref, _results;\n        if (file.previewElement) {\n          file.previewElement.classList.remove(\"dz-file-preview\");\n          file.previewElement.classList.add(\"dz-image-preview\");\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\");\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            thumbnailElement = _ref[_i];\n            thumbnailElement.alt = file.name;\n            _results.push(thumbnailElement.src = dataUrl);\n          }\n          return _results;\n        }\n      },\n      error: function(file, message) {\n        var node, _i, _len, _ref, _results;\n        if (file.previewElement) {\n          file.previewElement.classList.add(\"dz-error\");\n          if (typeof message !== \"String\" && message.error) {\n            message = message.error;\n          }\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-errormessage]\");\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            node = _ref[_i];\n            _results.push(node.textContent = message);\n          }\n          return _results;\n        }\n      },\n      errormultiple: noop,\n      processing: function(file) {\n        if (file.previewElement) {\n          file.previewElement.classList.add(\"dz-processing\");\n          if (file._removeLink) {\n            return file._removeLink.textContent = this.options.dictCancelUpload;\n          }\n        }\n      },\n      processingmultiple: noop,\n      uploadprogress: function(file, progress, bytesSent) {\n        var node, _i, _len, _ref, _results;\n        if (file.previewElement) {\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-uploadprogress]\");\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            node = _ref[_i];\n            _results.push(node.style.width = \"\" + progress + \"%\");\n          }\n          return _results;\n        }\n      },\n      totaluploadprogress: noop,\n      sending: noop,\n      sendingmultiple: noop,\n      success: function(file) {\n        if (file.previewElement) {\n          return file.previewElement.classList.add(\"dz-success\");\n        }\n      },\n      successmultiple: noop,\n      canceled: function(file) {\n        return this.emit(\"error\", file, \"Upload canceled.\");\n      },\n      canceledmultiple: noop,\n      complete: function(file) {\n        if (file._removeLink) {\n          return file._removeLink.textContent = this.options.dictRemoveFile;\n        }\n      },\n      completemultiple: noop,\n      maxfilesexceeded: noop,\n      maxfilesreached: noop,\n      previewTemplate: \"<div class=\\\"dz-preview dz-file-preview\\\">\\n  <div class=\\\"dz-details\\\">\\n    <div class=\\\"dz-filename\\\"><span data-dz-name></span></div>\\n    <div class=\\\"dz-size\\\" data-dz-size></div>\\n    <img data-dz-thumbnail />\\n  </div>\\n  <div class=\\\"dz-progress\\\"><span class=\\\"dz-upload\\\" data-dz-uploadprogress></span></div>\\n  <div class=\\\"dz-success-mark\\\"><span>✔</span></div>\\n  <div class=\\\"dz-error-mark\\\"><span>✘</span></div>\\n  <div class=\\\"dz-error-message\\\"><span data-dz-errormessage></span></div>\\n</div>\"\n    };\n\n    extend = function() {\n      var key, object, objects, target, val, _i, _len;\n      target = arguments[0], objects = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      for (_i = 0, _len = objects.length; _i < _len; _i++) {\n        object = objects[_i];\n        for (key in object) {\n          val = object[key];\n          target[key] = val;\n        }\n      }\n      return target;\n    };\n\n    function Dropzone(element, options) {\n      var elementOptions, fallback, _ref;\n      this.element = element;\n      this.version = Dropzone.version;\n      this.defaultOptions.previewTemplate = this.defaultOptions.previewTemplate.replace(/\\n*/g, \"\");\n      this.clickableElements = [];\n      this.listeners = [];\n      this.files = [];\n      if (typeof this.element === \"string\") {\n        this.element = document.querySelector(this.element);\n      }\n      if (!(this.element && (this.element.nodeType != null))) {\n        throw new Error(\"Invalid dropzone element.\");\n      }\n      if (this.element.dropzone) {\n        throw new Error(\"Dropzone already attached.\");\n      }\n      Dropzone.instances.push(this);\n      this.element.dropzone = this;\n      elementOptions = (_ref = Dropzone.optionsForElement(this.element)) != null ? _ref : {};\n      this.options = extend({}, this.defaultOptions, elementOptions, options != null ? options : {});\n      if (this.options.forceFallback || !Dropzone.isBrowserSupported()) {\n        return this.options.fallback.call(this);\n      }\n      if (this.options.url == null) {\n        this.options.url = this.element.getAttribute(\"action\");\n      }\n      if (!this.options.url) {\n        throw new Error(\"No URL provided.\");\n      }\n      if (this.options.acceptedFiles && this.options.acceptedMimeTypes) {\n        throw new Error(\"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\");\n      }\n      if (this.options.acceptedMimeTypes) {\n        this.options.acceptedFiles = this.options.acceptedMimeTypes;\n        delete this.options.acceptedMimeTypes;\n      }\n      this.options.method = this.options.method.toUpperCase();\n      if ((fallback = this.getExistingFallback()) && fallback.parentNode) {\n        fallback.parentNode.removeChild(fallback);\n      }\n      if (this.options.previewsContainer !== false) {\n        if (this.options.previewsContainer) {\n          this.previewsContainer = Dropzone.getElement(this.options.previewsContainer, \"previewsContainer\");\n        } else {\n          this.previewsContainer = this.element;\n        }\n      }\n      if (this.options.clickable) {\n        if (this.options.clickable === true) {\n          this.clickableElements = [this.element];\n        } else {\n          this.clickableElements = Dropzone.getElements(this.options.clickable, \"clickable\");\n        }\n      }\n      this.init();\n    }\n\n    Dropzone.prototype.getAcceptedFiles = function() {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.accepted) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.getRejectedFiles = function() {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (!file.accepted) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.getFilesWithStatus = function(status) {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.status === status) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.getQueuedFiles = function() {\n      return this.getFilesWithStatus(Dropzone.QUEUED);\n    };\n\n    Dropzone.prototype.getUploadingFiles = function() {\n      return this.getFilesWithStatus(Dropzone.UPLOADING);\n    };\n\n    Dropzone.prototype.getActiveFiles = function() {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.status === Dropzone.UPLOADING || file.status === Dropzone.QUEUED) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.init = function() {\n      var eventName, noPropagation, setupHiddenFileInput, _i, _len, _ref, _ref1;\n      if (this.element.tagName === \"form\") {\n        this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n      }\n      if (this.element.classList.contains(\"dropzone\") && !this.element.querySelector(\".dz-message\")) {\n        this.element.appendChild(Dropzone.createElement(\"<div class=\\\"dz-default dz-message\\\"><span>\" + this.options.dictDefaultMessage + \"</span></div>\"));\n      }\n      if (this.clickableElements.length) {\n        setupHiddenFileInput = (function(_this) {\n          return function() {\n            if (_this.hiddenFileInput) {\n              document.body.removeChild(_this.hiddenFileInput);\n            }\n            _this.hiddenFileInput = document.createElement(\"input\");\n            _this.hiddenFileInput.setAttribute(\"type\", \"file\");\n            if ((_this.options.maxFiles == null) || _this.options.maxFiles > 1) {\n              _this.hiddenFileInput.setAttribute(\"multiple\", \"multiple\");\n            }\n            _this.hiddenFileInput.className = \"dz-hidden-input\";\n            if (_this.options.acceptedFiles != null) {\n              _this.hiddenFileInput.setAttribute(\"accept\", _this.options.acceptedFiles);\n            }\n            _this.hiddenFileInput.style.visibility = \"hidden\";\n            _this.hiddenFileInput.style.position = \"absolute\";\n            _this.hiddenFileInput.style.top = \"0\";\n            _this.hiddenFileInput.style.left = \"0\";\n            _this.hiddenFileInput.style.height = \"0\";\n            _this.hiddenFileInput.style.width = \"0\";\n            document.body.appendChild(_this.hiddenFileInput);\n            return _this.hiddenFileInput.addEventListener(\"change\", function() {\n              var file, files, _i, _len;\n              files = _this.hiddenFileInput.files;\n              if (files.length) {\n                for (_i = 0, _len = files.length; _i < _len; _i++) {\n                  file = files[_i];\n                  _this.addFile(file);\n                }\n              }\n              return setupHiddenFileInput();\n            });\n          };\n        })(this);\n        setupHiddenFileInput();\n      }\n      this.URL = (_ref = window.URL) != null ? _ref : window.webkitURL;\n      _ref1 = this.events;\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        eventName = _ref1[_i];\n        this.on(eventName, this.options[eventName]);\n      }\n      this.on(\"uploadprogress\", (function(_this) {\n        return function() {\n          return _this.updateTotalUploadProgress();\n        };\n      })(this));\n      this.on(\"removedfile\", (function(_this) {\n        return function() {\n          return _this.updateTotalUploadProgress();\n        };\n      })(this));\n      this.on(\"canceled\", (function(_this) {\n        return function(file) {\n          return _this.emit(\"complete\", file);\n        };\n      })(this));\n      this.on(\"complete\", (function(_this) {\n        return function(file) {\n          if (_this.getUploadingFiles().length === 0 && _this.getQueuedFiles().length === 0) {\n            return setTimeout((function() {\n              return _this.emit(\"queuecomplete\");\n            }), 0);\n          }\n        };\n      })(this));\n      noPropagation = function(e) {\n        e.stopPropagation();\n        if (e.preventDefault) {\n          return e.preventDefault();\n        } else {\n          return e.returnValue = false;\n        }\n      };\n      this.listeners = [\n        {\n          element: this.element,\n          events: {\n            \"dragstart\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragstart\", e);\n              };\n            })(this),\n            \"dragenter\": (function(_this) {\n              return function(e) {\n                noPropagation(e);\n                return _this.emit(\"dragenter\", e);\n              };\n            })(this),\n            \"dragover\": (function(_this) {\n              return function(e) {\n                var efct;\n                try {\n                  efct = e.dataTransfer.effectAllowed;\n                } catch (_error) {}\n                e.dataTransfer.dropEffect = 'move' === efct || 'linkMove' === efct ? 'move' : 'copy';\n                noPropagation(e);\n                return _this.emit(\"dragover\", e);\n              };\n            })(this),\n            \"dragleave\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragleave\", e);\n              };\n            })(this),\n            \"drop\": (function(_this) {\n              return function(e) {\n                noPropagation(e);\n                return _this.drop(e);\n              };\n            })(this),\n            \"dragend\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragend\", e);\n              };\n            })(this)\n          }\n        }\n      ];\n      this.clickableElements.forEach((function(_this) {\n        return function(clickableElement) {\n          return _this.listeners.push({\n            element: clickableElement,\n            events: {\n              \"click\": function(evt) {\n                if ((clickableElement !== _this.element) || (evt.target === _this.element || Dropzone.elementInside(evt.target, _this.element.querySelector(\".dz-message\")))) {\n                  return _this.hiddenFileInput.click();\n                }\n              }\n            }\n          });\n        };\n      })(this));\n      this.enable();\n      return this.options.init.call(this);\n    };\n\n    Dropzone.prototype.destroy = function() {\n      var _ref;\n      this.disable();\n      this.removeAllFiles(true);\n      if ((_ref = this.hiddenFileInput) != null ? _ref.parentNode : void 0) {\n        this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n        this.hiddenFileInput = null;\n      }\n      delete this.element.dropzone;\n      return Dropzone.instances.splice(Dropzone.instances.indexOf(this), 1);\n    };\n\n    Dropzone.prototype.updateTotalUploadProgress = function() {\n      var activeFiles, file, totalBytes, totalBytesSent, totalUploadProgress, _i, _len, _ref;\n      totalBytesSent = 0;\n      totalBytes = 0;\n      activeFiles = this.getActiveFiles();\n      if (activeFiles.length) {\n        _ref = this.getActiveFiles();\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          file = _ref[_i];\n          totalBytesSent += file.upload.bytesSent;\n          totalBytes += file.upload.total;\n        }\n        totalUploadProgress = 100 * totalBytesSent / totalBytes;\n      } else {\n        totalUploadProgress = 100;\n      }\n      return this.emit(\"totaluploadprogress\", totalUploadProgress, totalBytes, totalBytesSent);\n    };\n\n    Dropzone.prototype._getParamName = function(n) {\n      if (typeof this.options.paramName === \"function\") {\n        return this.options.paramName(n);\n      } else {\n        return \"\" + this.options.paramName + (this.options.uploadMultiple ? \"[\" + n + \"]\" : \"\");\n      }\n    };\n\n    Dropzone.prototype.getFallbackForm = function() {\n      var existingFallback, fields, fieldsString, form;\n      if (existingFallback = this.getExistingFallback()) {\n        return existingFallback;\n      }\n      fieldsString = \"<div class=\\\"dz-fallback\\\">\";\n      if (this.options.dictFallbackText) {\n        fieldsString += \"<p>\" + this.options.dictFallbackText + \"</p>\";\n      }\n      fieldsString += \"<input type=\\\"file\\\" name=\\\"\" + (this._getParamName(0)) + \"\\\" \" + (this.options.uploadMultiple ? 'multiple=\"multiple\"' : void 0) + \" /><input type=\\\"submit\\\" value=\\\"Upload!\\\"></div>\";\n      fields = Dropzone.createElement(fieldsString);\n      if (this.element.tagName !== \"FORM\") {\n        form = Dropzone.createElement(\"<form action=\\\"\" + this.options.url + \"\\\" enctype=\\\"multipart/form-data\\\" method=\\\"\" + this.options.method + \"\\\"></form>\");\n        form.appendChild(fields);\n      } else {\n        this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n        this.element.setAttribute(\"method\", this.options.method);\n      }\n      return form != null ? form : fields;\n    };\n\n    Dropzone.prototype.getExistingFallback = function() {\n      var fallback, getFallback, tagName, _i, _len, _ref;\n      getFallback = function(elements) {\n        var el, _i, _len;\n        for (_i = 0, _len = elements.length; _i < _len; _i++) {\n          el = elements[_i];\n          if (/(^| )fallback($| )/.test(el.className)) {\n            return el;\n          }\n        }\n      };\n      _ref = [\"div\", \"form\"];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        tagName = _ref[_i];\n        if (fallback = getFallback(this.element.getElementsByTagName(tagName))) {\n          return fallback;\n        }\n      }\n    };\n\n    Dropzone.prototype.setupEventListeners = function() {\n      var elementListeners, event, listener, _i, _len, _ref, _results;\n      _ref = this.listeners;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elementListeners = _ref[_i];\n        _results.push((function() {\n          var _ref1, _results1;\n          _ref1 = elementListeners.events;\n          _results1 = [];\n          for (event in _ref1) {\n            listener = _ref1[event];\n            _results1.push(elementListeners.element.addEventListener(event, listener, false));\n          }\n          return _results1;\n        })());\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.removeEventListeners = function() {\n      var elementListeners, event, listener, _i, _len, _ref, _results;\n      _ref = this.listeners;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elementListeners = _ref[_i];\n        _results.push((function() {\n          var _ref1, _results1;\n          _ref1 = elementListeners.events;\n          _results1 = [];\n          for (event in _ref1) {\n            listener = _ref1[event];\n            _results1.push(elementListeners.element.removeEventListener(event, listener, false));\n          }\n          return _results1;\n        })());\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.disable = function() {\n      var file, _i, _len, _ref, _results;\n      this.clickableElements.forEach(function(element) {\n        return element.classList.remove(\"dz-clickable\");\n      });\n      this.removeEventListeners();\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        _results.push(this.cancelUpload(file));\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.enable = function() {\n      this.clickableElements.forEach(function(element) {\n        return element.classList.add(\"dz-clickable\");\n      });\n      return this.setupEventListeners();\n    };\n\n    Dropzone.prototype.filesize = function(size) {\n      var string;\n      if (size >= 1024 * 1024 * 1024 * 1024 / 10) {\n        size = size / (1024 * 1024 * 1024 * 1024 / 10);\n        string = \"TiB\";\n      } else if (size >= 1024 * 1024 * 1024 / 10) {\n        size = size / (1024 * 1024 * 1024 / 10);\n        string = \"GiB\";\n      } else if (size >= 1024 * 1024 / 10) {\n        size = size / (1024 * 1024 / 10);\n        string = \"MiB\";\n      } else if (size >= 1024 / 10) {\n        size = size / (1024 / 10);\n        string = \"KiB\";\n      } else {\n        size = size * 10;\n        string = \"b\";\n      }\n      return \"<strong>\" + (Math.round(size) / 10) + \"</strong> \" + string;\n    };\n\n    Dropzone.prototype._updateMaxFilesReachedClass = function() {\n      if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {\n        if (this.getAcceptedFiles().length === this.options.maxFiles) {\n          this.emit('maxfilesreached', this.files);\n        }\n        return this.element.classList.add(\"dz-max-files-reached\");\n      } else {\n        return this.element.classList.remove(\"dz-max-files-reached\");\n      }\n    };\n\n    Dropzone.prototype.drop = function(e) {\n      var files, items;\n      if (!e.dataTransfer) {\n        return;\n      }\n      this.emit(\"drop\", e);\n      files = e.dataTransfer.files;\n      if (files.length) {\n        items = e.dataTransfer.items;\n        if (items && items.length && (items[0].webkitGetAsEntry != null)) {\n          this._addFilesFromItems(items);\n        } else {\n          this.handleFiles(files);\n        }\n      }\n    };\n\n    Dropzone.prototype.paste = function(e) {\n      var items, _ref;\n      if ((e != null ? (_ref = e.clipboardData) != null ? _ref.items : void 0 : void 0) == null) {\n        return;\n      }\n      this.emit(\"paste\", e);\n      items = e.clipboardData.items;\n      if (items.length) {\n        return this._addFilesFromItems(items);\n      }\n    };\n\n    Dropzone.prototype.handleFiles = function(files) {\n      var file, _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        _results.push(this.addFile(file));\n      }\n      return _results;\n    };\n\n    Dropzone.prototype._addFilesFromItems = function(items) {\n      var entry, item, _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = items.length; _i < _len; _i++) {\n        item = items[_i];\n        if ((item.webkitGetAsEntry != null) && (entry = item.webkitGetAsEntry())) {\n          if (entry.isFile) {\n            _results.push(this.addFile(item.getAsFile()));\n          } else if (entry.isDirectory) {\n            _results.push(this._addFilesFromDirectory(entry, entry.name));\n          } else {\n            _results.push(void 0);\n          }\n        } else if (item.getAsFile != null) {\n          if ((item.kind == null) || item.kind === \"file\") {\n            _results.push(this.addFile(item.getAsFile()));\n          } else {\n            _results.push(void 0);\n          }\n        } else {\n          _results.push(void 0);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype._addFilesFromDirectory = function(directory, path) {\n      var dirReader, entriesReader;\n      dirReader = directory.createReader();\n      entriesReader = (function(_this) {\n        return function(entries) {\n          var entry, _i, _len;\n          for (_i = 0, _len = entries.length; _i < _len; _i++) {\n            entry = entries[_i];\n            if (entry.isFile) {\n              entry.file(function(file) {\n                if (_this.options.ignoreHiddenFiles && file.name.substring(0, 1) === '.') {\n                  return;\n                }\n                file.fullPath = \"\" + path + \"/\" + file.name;\n                return _this.addFile(file);\n              });\n            } else if (entry.isDirectory) {\n              _this._addFilesFromDirectory(entry, \"\" + path + \"/\" + entry.name);\n            }\n          }\n        };\n      })(this);\n      return dirReader.readEntries(entriesReader, function(error) {\n        return typeof console !== \"undefined\" && console !== null ? typeof console.log === \"function\" ? console.log(error) : void 0 : void 0;\n      });\n    };\n\n    Dropzone.prototype.accept = function(file, done) {\n      if (file.size > this.options.maxFilesize * 1024 * 1024) {\n        return done(this.options.dictFileTooBig.replace(\"{{filesize}}\", Math.round(file.size / 1024 / 10.24) / 100).replace(\"{{maxFilesize}}\", this.options.maxFilesize));\n      } else if (!Dropzone.isValidFile(file, this.options.acceptedFiles)) {\n        return done(this.options.dictInvalidFileType);\n      } else if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {\n        done(this.options.dictMaxFilesExceeded.replace(\"{{maxFiles}}\", this.options.maxFiles));\n        return this.emit(\"maxfilesexceeded\", file);\n      } else {\n        return this.options.accept.call(this, file, done);\n      }\n    };\n\n    Dropzone.prototype.addFile = function(file) {\n      file.upload = {\n        progress: 0,\n        total: file.size,\n        bytesSent: 0\n      };\n      this.files.push(file);\n      file.status = Dropzone.ADDED;\n      this.emit(\"addedfile\", file);\n      this._enqueueThumbnail(file);\n      return this.accept(file, (function(_this) {\n        return function(error) {\n          if (error) {\n            file.accepted = false;\n            _this._errorProcessing([file], error);\n          } else {\n            file.accepted = true;\n            if (_this.options.autoQueue) {\n              _this.enqueueFile(file);\n            }\n          }\n          return _this._updateMaxFilesReachedClass();\n        };\n      })(this));\n    };\n\n    Dropzone.prototype.enqueueFiles = function(files) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        this.enqueueFile(file);\n      }\n      return null;\n    };\n\n    Dropzone.prototype.enqueueFile = function(file) {\n      if (file.status === Dropzone.ADDED && file.accepted === true) {\n        file.status = Dropzone.QUEUED;\n        if (this.options.autoProcessQueue) {\n          return setTimeout(((function(_this) {\n            return function() {\n              return _this.processQueue();\n            };\n          })(this)), 0);\n        }\n      } else {\n        throw new Error(\"This file can't be queued because it has already been processed or was rejected.\");\n      }\n    };\n\n    Dropzone.prototype._thumbnailQueue = [];\n\n    Dropzone.prototype._processingThumbnail = false;\n\n    Dropzone.prototype._enqueueThumbnail = function(file) {\n      if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1024 * 1024) {\n        this._thumbnailQueue.push(file);\n        return setTimeout(((function(_this) {\n          return function() {\n            return _this._processThumbnailQueue();\n          };\n        })(this)), 0);\n      }\n    };\n\n    Dropzone.prototype._processThumbnailQueue = function() {\n      if (this._processingThumbnail || this._thumbnailQueue.length === 0) {\n        return;\n      }\n      this._processingThumbnail = true;\n      return this.createThumbnail(this._thumbnailQueue.shift(), (function(_this) {\n        return function() {\n          _this._processingThumbnail = false;\n          return _this._processThumbnailQueue();\n        };\n      })(this));\n    };\n\n    Dropzone.prototype.removeFile = function(file) {\n      if (file.status === Dropzone.UPLOADING) {\n        this.cancelUpload(file);\n      }\n      this.files = without(this.files, file);\n      this.emit(\"removedfile\", file);\n      if (this.files.length === 0) {\n        return this.emit(\"reset\");\n      }\n    };\n\n    Dropzone.prototype.removeAllFiles = function(cancelIfNecessary) {\n      var file, _i, _len, _ref;\n      if (cancelIfNecessary == null) {\n        cancelIfNecessary = false;\n      }\n      _ref = this.files.slice();\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.status !== Dropzone.UPLOADING || cancelIfNecessary) {\n          this.removeFile(file);\n        }\n      }\n      return null;\n    };\n\n    Dropzone.prototype.createThumbnail = function(file, callback) {\n      var fileReader;\n      fileReader = new FileReader;\n      fileReader.onload = (function(_this) {\n        return function() {\n          var img;\n          img = document.createElement(\"img\");\n          img.onload = function() {\n            var canvas, ctx, resizeInfo, thumbnail, _ref, _ref1, _ref2, _ref3;\n            file.width = img.width;\n            file.height = img.height;\n            resizeInfo = _this.options.resize.call(_this, file);\n            if (resizeInfo.trgWidth == null) {\n              resizeInfo.trgWidth = resizeInfo.optWidth;\n            }\n            if (resizeInfo.trgHeight == null) {\n              resizeInfo.trgHeight = resizeInfo.optHeight;\n            }\n            canvas = document.createElement(\"canvas\");\n            ctx = canvas.getContext(\"2d\");\n            canvas.width = resizeInfo.trgWidth;\n            canvas.height = resizeInfo.trgHeight;\n            drawImageIOSFix(ctx, img, (_ref = resizeInfo.srcX) != null ? _ref : 0, (_ref1 = resizeInfo.srcY) != null ? _ref1 : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, (_ref2 = resizeInfo.trgX) != null ? _ref2 : 0, (_ref3 = resizeInfo.trgY) != null ? _ref3 : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);\n            thumbnail = canvas.toDataURL(\"image/png\");\n            _this.emit(\"thumbnail\", file, thumbnail);\n            if (callback != null) {\n              return callback();\n            }\n          };\n          return img.src = fileReader.result;\n        };\n      })(this);\n      return fileReader.readAsDataURL(file);\n    };\n\n    Dropzone.prototype.processQueue = function() {\n      var i, parallelUploads, processingLength, queuedFiles;\n      parallelUploads = this.options.parallelUploads;\n      processingLength = this.getUploadingFiles().length;\n      i = processingLength;\n      if (processingLength >= parallelUploads) {\n        return;\n      }\n      queuedFiles = this.getQueuedFiles();\n      if (!(queuedFiles.length > 0)) {\n        return;\n      }\n      if (this.options.uploadMultiple) {\n        return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));\n      } else {\n        while (i < parallelUploads) {\n          if (!queuedFiles.length) {\n            return;\n          }\n          this.processFile(queuedFiles.shift());\n          i++;\n        }\n      }\n    };\n\n    Dropzone.prototype.processFile = function(file) {\n      return this.processFiles([file]);\n    };\n\n    Dropzone.prototype.processFiles = function(files) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.processing = true;\n        file.status = Dropzone.UPLOADING;\n        this.emit(\"processing\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"processingmultiple\", files);\n      }\n      return this.uploadFiles(files);\n    };\n\n    Dropzone.prototype._getFilesWithXhr = function(xhr) {\n      var file, files;\n      return files = (function() {\n        var _i, _len, _ref, _results;\n        _ref = this.files;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          file = _ref[_i];\n          if (file.xhr === xhr) {\n            _results.push(file);\n          }\n        }\n        return _results;\n      }).call(this);\n    };\n\n    Dropzone.prototype.cancelUpload = function(file) {\n      var groupedFile, groupedFiles, _i, _j, _len, _len1, _ref;\n      if (file.status === Dropzone.UPLOADING) {\n        groupedFiles = this._getFilesWithXhr(file.xhr);\n        for (_i = 0, _len = groupedFiles.length; _i < _len; _i++) {\n          groupedFile = groupedFiles[_i];\n          groupedFile.status = Dropzone.CANCELED;\n        }\n        file.xhr.abort();\n        for (_j = 0, _len1 = groupedFiles.length; _j < _len1; _j++) {\n          groupedFile = groupedFiles[_j];\n          this.emit(\"canceled\", groupedFile);\n        }\n        if (this.options.uploadMultiple) {\n          this.emit(\"canceledmultiple\", groupedFiles);\n        }\n      } else if ((_ref = file.status) === Dropzone.ADDED || _ref === Dropzone.QUEUED) {\n        file.status = Dropzone.CANCELED;\n        this.emit(\"canceled\", file);\n        if (this.options.uploadMultiple) {\n          this.emit(\"canceledmultiple\", [file]);\n        }\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    Dropzone.prototype.uploadFile = function(file) {\n      return this.uploadFiles([file]);\n    };\n\n    Dropzone.prototype.uploadFiles = function(files) {\n      var file, formData, handleError, headerName, headerValue, headers, i, input, inputName, inputType, key, option, progressObj, response, updateProgress, value, xhr, _i, _j, _k, _l, _len, _len1, _len2, _len3, _m, _ref, _ref1, _ref2, _ref3, _ref4, _ref5;\n      xhr = new XMLHttpRequest();\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.xhr = xhr;\n      }\n      xhr.open(this.options.method, this.options.url, true);\n      xhr.withCredentials = !!this.options.withCredentials;\n      response = null;\n      handleError = (function(_this) {\n        return function() {\n          var _j, _len1, _results;\n          _results = [];\n          for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\n            file = files[_j];\n            _results.push(_this._errorProcessing(files, response || _this.options.dictResponseError.replace(\"{{statusCode}}\", xhr.status), xhr));\n          }\n          return _results;\n        };\n      })(this);\n      updateProgress = (function(_this) {\n        return function(e) {\n          var allFilesFinished, progress, _j, _k, _l, _len1, _len2, _len3, _results;\n          if (e != null) {\n            progress = 100 * e.loaded / e.total;\n            for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\n              file = files[_j];\n              file.upload = {\n                progress: progress,\n                total: e.total,\n                bytesSent: e.loaded\n              };\n            }\n          } else {\n            allFilesFinished = true;\n            progress = 100;\n            for (_k = 0, _len2 = files.length; _k < _len2; _k++) {\n              file = files[_k];\n              if (!(file.upload.progress === 100 && file.upload.bytesSent === file.upload.total)) {\n                allFilesFinished = false;\n              }\n              file.upload.progress = progress;\n              file.upload.bytesSent = file.upload.total;\n            }\n            if (allFilesFinished) {\n              return;\n            }\n          }\n          _results = [];\n          for (_l = 0, _len3 = files.length; _l < _len3; _l++) {\n            file = files[_l];\n            _results.push(_this.emit(\"uploadprogress\", file, progress, file.upload.bytesSent));\n          }\n          return _results;\n        };\n      })(this);\n      xhr.onload = (function(_this) {\n        return function(e) {\n          var _ref;\n          if (files[0].status === Dropzone.CANCELED) {\n            return;\n          }\n          if (xhr.readyState !== 4) {\n            return;\n          }\n          response = xhr.responseText;\n          if (xhr.getResponseHeader(\"content-type\") && ~xhr.getResponseHeader(\"content-type\").indexOf(\"application/json\")) {\n            try {\n              response = JSON.parse(response);\n            } catch (_error) {\n              e = _error;\n              response = \"Invalid JSON response from server.\";\n            }\n          }\n          updateProgress();\n          if (!((200 <= (_ref = xhr.status) && _ref < 300))) {\n            return handleError();\n          } else {\n            return _this._finished(files, response, e);\n          }\n        };\n      })(this);\n      xhr.onerror = (function(_this) {\n        return function() {\n          if (files[0].status === Dropzone.CANCELED) {\n            return;\n          }\n          return handleError();\n        };\n      })(this);\n      progressObj = (_ref = xhr.upload) != null ? _ref : xhr;\n      progressObj.onprogress = updateProgress;\n      headers = {\n        \"Accept\": \"application/json\",\n        \"Cache-Control\": \"no-cache\",\n        \"X-Requested-With\": \"XMLHttpRequest\"\n      };\n      if (this.options.headers) {\n        extend(headers, this.options.headers);\n      }\n      for (headerName in headers) {\n        headerValue = headers[headerName];\n        xhr.setRequestHeader(headerName, headerValue);\n      }\n      formData = new FormData();\n      if (this.options.params) {\n        _ref1 = this.options.params;\n        for (key in _ref1) {\n          value = _ref1[key];\n          formData.append(key, value);\n        }\n      }\n      for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\n        file = files[_j];\n        this.emit(\"sending\", file, xhr, formData);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"sendingmultiple\", files, xhr, formData);\n      }\n      if (this.element.tagName === \"FORM\") {\n        _ref2 = this.element.querySelectorAll(\"input, textarea, select, button\");\n        for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n          input = _ref2[_k];\n          inputName = input.getAttribute(\"name\");\n          inputType = input.getAttribute(\"type\");\n          if (input.tagName === \"SELECT\" && input.hasAttribute(\"multiple\")) {\n            _ref3 = input.options;\n            for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {\n              option = _ref3[_l];\n              if (option.selected) {\n                formData.append(inputName, option.value);\n              }\n            }\n          } else if (!inputType || ((_ref4 = inputType.toLowerCase()) !== \"checkbox\" && _ref4 !== \"radio\") || input.checked) {\n            formData.append(inputName, input.value);\n          }\n        }\n      }\n      for (i = _m = 0, _ref5 = files.length - 1; 0 <= _ref5 ? _m <= _ref5 : _m >= _ref5; i = 0 <= _ref5 ? ++_m : --_m) {\n        formData.append(this._getParamName(i), files[i], files[i].name);\n      }\n      return xhr.send(formData);\n    };\n\n    Dropzone.prototype._finished = function(files, responseText, e) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.status = Dropzone.SUCCESS;\n        this.emit(\"success\", file, responseText, e);\n        this.emit(\"complete\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"successmultiple\", files, responseText, e);\n        this.emit(\"completemultiple\", files);\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    Dropzone.prototype._errorProcessing = function(files, message, xhr) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.status = Dropzone.ERROR;\n        this.emit(\"error\", file, message, xhr);\n        this.emit(\"complete\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"errormultiple\", files, message, xhr);\n        this.emit(\"completemultiple\", files);\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    return Dropzone;\n\n  })(Em);\n\n  Dropzone.version = \"3.10.2\";\n\n  Dropzone.options = {};\n\n  Dropzone.optionsForElement = function(element) {\n    if (element.getAttribute(\"id\")) {\n      return Dropzone.options[camelize(element.getAttribute(\"id\"))];\n    } else {\n      return void 0;\n    }\n  };\n\n  Dropzone.instances = [];\n\n  Dropzone.forElement = function(element) {\n    if (typeof element === \"string\") {\n      element = document.querySelector(element);\n    }\n    if ((element != null ? element.dropzone : void 0) == null) {\n      throw new Error(\"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\");\n    }\n    return element.dropzone;\n  };\n\n  Dropzone.autoDiscover = false;\n\n  Dropzone.discover = function() {\n    var checkElements, dropzone, dropzones, _i, _len, _results;\n    if (document.querySelectorAll) {\n      dropzones = document.querySelectorAll(\".dropzone\");\n    } else {\n      dropzones = [];\n      checkElements = function(elements) {\n        var el, _i, _len, _results;\n        _results = [];\n        for (_i = 0, _len = elements.length; _i < _len; _i++) {\n          el = elements[_i];\n          if (/(^| )dropzone($| )/.test(el.className)) {\n            _results.push(dropzones.push(el));\n          } else {\n            _results.push(void 0);\n          }\n        }\n        return _results;\n      };\n      checkElements(document.getElementsByTagName(\"div\"));\n      checkElements(document.getElementsByTagName(\"form\"));\n    }\n    _results = [];\n    for (_i = 0, _len = dropzones.length; _i < _len; _i++) {\n      dropzone = dropzones[_i];\n      if (Dropzone.optionsForElement(dropzone) !== false) {\n        _results.push(new Dropzone(dropzone));\n      } else {\n        _results.push(void 0);\n      }\n    }\n    return _results;\n  };\n\n  Dropzone.blacklistedBrowsers = [/opera.*Macintosh.*version\\/12/i];\n\n  Dropzone.isBrowserSupported = function() {\n    var capableBrowser, regex, _i, _len, _ref;\n    capableBrowser = true;\n    if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {\n      if (!(\"classList\" in document.createElement(\"a\"))) {\n        capableBrowser = false;\n      } else {\n        _ref = Dropzone.blacklistedBrowsers;\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          regex = _ref[_i];\n          if (regex.test(navigator.userAgent)) {\n            capableBrowser = false;\n            continue;\n          }\n        }\n      }\n    } else {\n      capableBrowser = false;\n    }\n    return capableBrowser;\n  };\n\n  without = function(list, rejectedItem) {\n    var item, _i, _len, _results;\n    _results = [];\n    for (_i = 0, _len = list.length; _i < _len; _i++) {\n      item = list[_i];\n      if (item !== rejectedItem) {\n        _results.push(item);\n      }\n    }\n    return _results;\n  };\n\n  camelize = function(str) {\n    return str.replace(/[\\-_](\\w)/g, function(match) {\n      return match.charAt(1).toUpperCase();\n    });\n  };\n\n  Dropzone.createElement = function(string) {\n    var div;\n    div = document.createElement(\"div\");\n    div.innerHTML = string;\n    return div.childNodes[0];\n  };\n\n  Dropzone.elementInside = function(element, container) {\n    if (element === container) {\n      return true;\n    }\n    while (element = element.parentNode) {\n      if (element === container) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  Dropzone.getElement = function(el, name) {\n    var element;\n    if (typeof el === \"string\") {\n      element = document.querySelector(el);\n    } else if (el.nodeType != null) {\n      element = el;\n    }\n    if (element == null) {\n      throw new Error(\"Invalid `\" + name + \"` option provided. Please provide a CSS selector or a plain HTML element.\");\n    }\n    return element;\n  };\n\n  Dropzone.getElements = function(els, name) {\n    var e, el, elements, _i, _j, _len, _len1, _ref;\n    if (els instanceof Array) {\n      elements = [];\n      try {\n        for (_i = 0, _len = els.length; _i < _len; _i++) {\n          el = els[_i];\n          elements.push(this.getElement(el, name));\n        }\n      } catch (_error) {\n        e = _error;\n        elements = null;\n      }\n    } else if (typeof els === \"string\") {\n      elements = [];\n      _ref = document.querySelectorAll(els);\n      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {\n        el = _ref[_j];\n        elements.push(el);\n      }\n    } else if (els.nodeType != null) {\n      elements = [els];\n    }\n    if (!((elements != null) && elements.length)) {\n      throw new Error(\"Invalid `\" + name + \"` option provided. Please provide a CSS selector, a plain HTML element or a list of those.\");\n    }\n    return elements;\n  };\n\n  Dropzone.confirm = function(question, accepted, rejected) {\n    if (window.confirm(question)) {\n      return accepted();\n    } else if (rejected != null) {\n      return rejected();\n    }\n  };\n\n  Dropzone.isValidFile = function(file, acceptedFiles) {\n    var baseMimeType, mimeType, validType, _i, _len;\n    if (!acceptedFiles) {\n      return true;\n    }\n    acceptedFiles = acceptedFiles.split(\",\");\n    mimeType = file.type;\n    baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n    for (_i = 0, _len = acceptedFiles.length; _i < _len; _i++) {\n      validType = acceptedFiles[_i];\n      validType = validType.trim();\n      if (validType.charAt(0) === \".\") {\n        if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) {\n          return true;\n        }\n      } else if (/\\/\\*$/.test(validType)) {\n        if (baseMimeType === validType.replace(/\\/.*$/, \"\")) {\n          return true;\n        }\n      } else {\n        if (mimeType === validType) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  if (typeof jQuery !== \"undefined\" && jQuery !== null) {\n    jQuery.fn.dropzone = function(options) {\n      return this.each(function() {\n        return new Dropzone(this, options);\n      });\n    };\n  }\n\n  if (typeof module !== \"undefined\" && module !== null) {\n    module.exports = Dropzone;\n  } else {\n    window.Dropzone = Dropzone;\n  }\n\n  Dropzone.ADDED = \"added\";\n\n  Dropzone.QUEUED = \"queued\";\n\n  Dropzone.ACCEPTED = Dropzone.QUEUED;\n\n  Dropzone.UPLOADING = \"uploading\";\n\n  Dropzone.PROCESSING = Dropzone.UPLOADING;\n\n  Dropzone.CANCELED = \"canceled\";\n\n  Dropzone.ERROR = \"error\";\n\n  Dropzone.SUCCESS = \"success\";\n\n\n  /*\n  \n  Bugfix for iOS 6 and 7\n  Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\n  based on the work of https://github.com/stomita/ios-imagefile-megapixel\n   */\n\n  detectVerticalSquash = function(img) {\n    var alpha, canvas, ctx, data, ey, ih, iw, py, ratio, sy;\n    iw = img.naturalWidth;\n    ih = img.naturalHeight;\n    canvas = document.createElement(\"canvas\");\n    canvas.width = 1;\n    canvas.height = ih;\n    ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    data = ctx.getImageData(0, 0, 1, ih).data;\n    sy = 0;\n    ey = ih;\n    py = ih;\n    while (py > sy) {\n      alpha = data[(py - 1) * 4 + 3];\n      if (alpha === 0) {\n        ey = py;\n      } else {\n        sy = py;\n      }\n      py = (ey + sy) >> 1;\n    }\n    ratio = py / ih;\n    if (ratio === 0) {\n      return 1;\n    } else {\n      return ratio;\n    }\n  };\n\n  drawImageIOSFix = function(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\n    var vertSquashRatio;\n    vertSquashRatio = detectVerticalSquash(img);\n    return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\n  };\n\n\n  /*\n   * contentloaded.js\n   *\n   * Author: Diego Perini (diego.perini at gmail.com)\n   * Summary: cross-browser wrapper for DOMContentLoaded\n   * Updated: 20101020\n   * License: MIT\n   * Version: 1.2\n   *\n   * URL:\n   * http://javascript.nwbox.com/ContentLoaded/\n   * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE\n   */\n\n  contentLoaded = function(win, fn) {\n    var add, doc, done, init, poll, pre, rem, root, top;\n    done = false;\n    top = true;\n    doc = win.document;\n    root = doc.documentElement;\n    add = (doc.addEventListener ? \"addEventListener\" : \"attachEvent\");\n    rem = (doc.addEventListener ? \"removeEventListener\" : \"detachEvent\");\n    pre = (doc.addEventListener ? \"\" : \"on\");\n    init = function(e) {\n      if (e.type === \"readystatechange\" && doc.readyState !== \"complete\") {\n        return;\n      }\n      (e.type === \"load\" ? win : doc)[rem](pre + e.type, init, false);\n      if (!done && (done = true)) {\n        return fn.call(win, e.type || e);\n      }\n    };\n    poll = function() {\n      var e;\n      try {\n        root.doScroll(\"left\");\n      } catch (_error) {\n        e = _error;\n        setTimeout(poll, 50);\n        return;\n      }\n      return init(\"poll\");\n    };\n    if (doc.readyState !== \"complete\") {\n      if (doc.createEventObject && root.doScroll) {\n        try {\n          top = !win.frameElement;\n        } catch (_error) {}\n        if (top) {\n          poll();\n        }\n      }\n      doc[add](pre + \"DOMContentLoaded\", init, false);\n      doc[add](pre + \"readystatechange\", init, false);\n      return win[add](pre + \"load\", init, false);\n    }\n  };\n\n  Dropzone._autoDiscoverFunction = function() {\n    if (Dropzone.autoDiscover) {\n      return Dropzone.discover();\n    }\n  };\n\n  contentLoaded(window, Dropzone._autoDiscoverFunction);\n\n}).call(this);\n\n});\n\nif (typeof exports == \"object\") {\n  module.exports = require(\"dropzone\");\n} else if (typeof define == \"function\" && define.amd) {\n  define([], function(){ return require(\"dropzone\"); });\n} else {\n  this[\"Dropzone\"] = require(\"dropzone\");\n}\n})()\n","\nTemplate.__checkName(\"dropzone\");\nTemplate[\"dropzone\"] = new Template(\"Template.dropzone\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: function() {\n      return Spacebars.mustache(view.lookup(\"id\"));\n    },\n    \"class\": \"dropzone\"\n  });\n}));\n","Template.dropzone.rendered = function() {\n  var options = _.extend({}, Meteor.Dropzone.options, this.data);\n  \n  if(this.data.id) {\n    this.dropzone = new Dropzone('#' + this.data.id + '.dropzone', options);\n  }else{\n    $(this.firstNode).dropzone(options);\n  }\n  \n};\n\nMeteor.Dropzone = {\n    options: {\n        \n    }\n};"]}